This is gnutls.info, produced by makeinfo version 6.3 from gnutls.texi.

This manual is last updated 6 March 2017 for version 3.6.0 of GnuTLS.

Copyright (C) 2001-2017 Free Software Foundation, Inc.\\ Copyright (C)
2001-2017 Nikos Mavrogiannopoulos

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".
INFO-DIR-SECTION Software libraries
START-INFO-DIR-ENTRY
* GnuTLS: (gnutls).		GNU Transport Layer Security Library.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION System Administration
START-INFO-DIR-ENTRY
* certtool: (gnutls)Invoking certtool.	Manipulate certificates and keys.
* gnutls-serv: (gnutls)Invoking gnutls-serv.	GnuTLS test server.
* gnutls-cli: (gnutls)Invoking gnutls-cli.	GnuTLS test client.
* gnutls-cli-debug: (gnutls)Invoking gnutls-cli-debug.	GnuTLS debug client.
* psktool: (gnutls)Invoking psktool.	Simple TLS-Pre-Shared-Keys manager.
* srptool: (gnutls)Invoking srptool.	Simple SRP password tool.
END-INFO-DIR-ENTRY


File: gnutls.info,  Node: Compatibility API,  Prev: Cryptographic API,  Up: API reference

E.13 Compatibility API
======================

The following functions are carried over from old GnuTLS released.  They
might be removed at a later version.  Their prototypes lie in
'gnutls/compat.h'.

gnutls_compression_get
----------------------

 -- Function: gnutls_compression_method_t gnutls_compression_get
          (gnutls_session_t SESSION)
     SESSION: is a 'gnutls_session_t' type.

     Get currently used compression algorithm.

     *Returns:* the currently used compression method, a
     'gnutls_compression_method_t' value.

gnutls_compression_get_id
-------------------------

 -- Function: gnutls_compression_method_t gnutls_compression_get_id
          (const char * NAME)
     NAME: is a compression method name

     The names are compared in a case insensitive way.

     *Returns:* an id of the specified in a string compression method,
     or 'GNUTLS_COMP_UNKNOWN' on error.

gnutls_compression_get_name
---------------------------

 -- Function: const char * gnutls_compression_get_name
          (gnutls_compression_method_t ALGORITHM)
     ALGORITHM: is a Compression algorithm

     Convert a 'gnutls_compression_method_t' value to a string.

     *Returns:* a pointer to a string that contains the name of the
     specified compression algorithm, or 'NULL' .

gnutls_compression_list
-----------------------

 -- Function: const gnutls_compression_method_t *
          gnutls_compression_list ( VOID)

     Get a list of compression methods.

     *Returns:* a zero-terminated list of 'gnutls_compression_method_t'
     integers indicating the available compression methods.

gnutls_global_set_mem_functions
-------------------------------

 -- Function: void gnutls_global_set_mem_functions
          (gnutls_alloc_function ALLOC_FUNC, gnutls_alloc_function
          SECURE_ALLOC_FUNC, gnutls_is_secure_function IS_SECURE_FUNC,
          gnutls_realloc_function REALLOC_FUNC, gnutls_free_function
          FREE_FUNC)
     ALLOC_FUNC: it's the default memory allocation function.  Like
     'malloc()' .

     SECURE_ALLOC_FUNC: This is the memory allocation function that will
     be used for sensitive data.

     IS_SECURE_FUNC: a function that returns 0 if the memory given is
     not secure.  May be NULL.

     REALLOC_FUNC: A realloc function

     FREE_FUNC: The function that frees allocated data.  Must accept a
     NULL pointer.

     *Deprecated:* since 3.3.0 it is no longer possible to replace the
     internally used memory allocation functions

     This is the function where you set the memory allocation functions
     gnutls is going to use.  By default the libc's allocation functions
     ('malloc()' , 'free()' ), are used by gnutls, to allocate both
     sensitive and not sensitive data.  This function is provided to set
     the memory allocation functions to something other than the
     defaults

     This function must be called before 'gnutls_global_init()' is
     called.  This function is not thread safe.

gnutls_openpgp_privkey_sign_hash
--------------------------------

 -- Function: int gnutls_openpgp_privkey_sign_hash
          (gnutls_openpgp_privkey_t KEY, const gnutls_datum_t * HASH,
          gnutls_datum_t * SIGNATURE)
     KEY: Holds the key

     HASH: holds the data to be signed

     SIGNATURE: will contain newly allocated signature

     This function is no-op.

     *Returns:* 'GNUTLS_E_UNIMPLEMENTED_FEATURE' .

gnutls_priority_compression_list
--------------------------------

 -- Function: int gnutls_priority_compression_list (gnutls_priority_t
          PCACHE, const unsigned int ** LIST)
     PCACHE: is a 'gnutls_prioritity_t' type.

     LIST: will point to an integer list

     Get a list of available compression method in the priority
     structure.

     *Returns:* the number of methods, or an error code.

     *Since:* 3.0

gnutls_x509_crl_sign
--------------------

 -- Function: int gnutls_x509_crl_sign (gnutls_x509_crl_t CRL,
          gnutls_x509_crt_t ISSUER, gnutls_x509_privkey_t ISSUER_KEY)
     CRL: should contain a gnutls_x509_crl_t type

     ISSUER: is the certificate of the certificate issuer

     ISSUER_KEY: holds the issuer's private key

     This function is the same a 'gnutls_x509_crl_sign2()' with no
     flags, and SHA1 as the hash algorithm.

     *Returns:* On success, 'GNUTLS_E_SUCCESS' (0) is returned,
     otherwise a negative error value.

     *Deprecated:* Use 'gnutls_x509_crl_privkey_sign()' .

gnutls_x509_crq_sign
--------------------

 -- Function: int gnutls_x509_crq_sign (gnutls_x509_crq_t CRQ,
          gnutls_x509_privkey_t KEY)
     CRQ: should contain a 'gnutls_x509_crq_t' type

     KEY: holds a private key

     This function is the same a 'gnutls_x509_crq_sign2()' with no
     flags, and SHA1 as the hash algorithm.

     *Returns:* On success, 'GNUTLS_E_SUCCESS' (0) is returned,
     otherwise a negative error value.

     *Deprecated:* Use 'gnutls_x509_crq_privkey_sign()' instead.

gnutls_x509_crt_get_preferred_hash_algorithm
--------------------------------------------

 -- Function: int gnutls_x509_crt_get_preferred_hash_algorithm
          (gnutls_x509_crt_t CRT, gnutls_digest_algorithm_t * HASH,
          unsigned int * MAND)
     CRT: Holds the certificate

     HASH: The result of the call with the hash algorithm used for
     signature

     MAND: If non-zero it means that the algorithm MUST use this hash.
     May be NULL.

     This function will read the certificate and return the appropriate
     digest algorithm to use for signing with this certificate.  Some
     certificates (i.e.  DSA might not be able to sign without the
     preferred algorithm).

     *Deprecated:* Please use
     'gnutls_pubkey_get_preferred_hash_algorithm()' .

     *Returns:* the 0 if the hash algorithm is found.  A negative error
     code is returned on error.

     *Since:* 2.12.0

gnutls_x509_privkey_sign_hash
-----------------------------

 -- Function: int gnutls_x509_privkey_sign_hash (gnutls_x509_privkey_t
          KEY, const gnutls_datum_t * HASH, gnutls_datum_t * SIGNATURE)
     KEY: a key

     HASH: holds the data to be signed

     SIGNATURE: will contain newly allocated signature

     This function will sign the given hash using the private key.  Do
     not use this function directly unless you know what it is.  Typical
     signing requires the data to be hashed and stored in special
     formats (e.g.  BER Digest-Info for RSA).

     This API is provided only for backwards compatibility, and thus
     restricted to RSA, DSA and ECDSA key types.  For other key types
     please use 'gnutls_privkey_sign_hash()' and
     'gnutls_privkey_sign_data()' .

     *Returns:* On success, 'GNUTLS_E_SUCCESS' (0) is returned,
     otherwise a negative error value.

     Deprecated in: 2.12.0


File: gnutls.info,  Node: Copying Information,  Next: Bibliography,  Prev: API reference,  Up: Top

Appendix F Copying Information
******************************

GNU Free Documentation License
==============================

                     Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.  We
     recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it can
     be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You accept
     the license if you copy, modify or distribute the work in a way
     requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in the
     notice that says that the Document is released under this License.
     If a section does not fit the above definition of Secondary then it
     is not allowed to be designated as Invariant.  The Document may
     contain zero Invariant Sections.  If the Document does not identify
     any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images composed
     of pixels) generic paint programs or (for drawings) some widely
     available drawing editor, and that is suitable for input to text
     formatters or for automatic translation to a variety of formats
     suitable for input to text formatters.  A copy made in an otherwise
     Transparent file format whose markup, or absence of markup, has
     been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if
     used for any substantial amount of text.  A copy that is not
     "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and standard-conforming
     simple HTML, PostScript or PDF designed for human modification.
     Examples of transparent image formats include PNG, XCF and JPG.
     Opaque formats include proprietary formats that can be read and
     edited only by proprietary word processors, SGML or XML for which
     the DTD and/or processing tools are not generally available, and
     the machine-generated HTML, PostScript or PDF produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     The "publisher" means any person or entity that distributes copies
     of the Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow the
     conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the title
     equally prominent and visible.  You may add other material on the
     covers in addition.  Copying with changes limited to the covers, as
     long as they preserve the title of the Document and satisfy these
     conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a machine-readable
     Transparent copy along with each Opaque copy, or state in or with
     each Opaque copy a computer-network location from which the general
     network-using public has access to download using public-standard
     network protocols a complete Transparent copy of the Document, free
     of added material.  If you use the latter option, you must take
     reasonably prudent steps, when you begin distribution of Opaque
     copies in quantity, to ensure that this Transparent copy will
     remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of copies,
     to give them a chance to provide you with an updated version of the
     Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with the
     Modified Version filling the role of the Document, thus licensing
     distribution and modification of the Modified Version to whoever
     possesses a copy of it.  In addition, you must do these things in
     the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of previous
          versions (which should, if there were any, be listed in the
          History section of the Document).  You may use the same title
          as a previous version if the original publisher of that
          version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on the
          Title Page.  If there is no section Entitled "History" in the
          Document, create one stating the title, year, authors, and
          publisher of the Document as given on its Title Page, then add
          an item describing the Modified Version as stated in the
          previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in the
          "History" section.  You may omit a network location for a work
          that was published at least four years before the Document
          itself, or if the original publisher of the version it refers
          to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section
          all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered
          in their text and in their titles.  Section numbers or the
          equivalent are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option designate
     some or all of these sections as invariant.  To do this, add their
     titles to the list of Invariant Sections in the Modified Version's
     license notice.  These titles must be distinct from any other
     section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end of
     the list of Cover Texts in the Modified Version.  Only one passage
     of Front-Cover Text and one of Back-Cover Text may be added by (or
     through arrangements made by) any one entity.  If the Document
     already includes a cover text for the same cover, previously added
     by you or by arrangement made by the same entity you are acting on
     behalf of, you may not add another; but you may replace the old
     one, on explicit permission from the previous publisher that added
     the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination all
     of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the documents
     in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of a
     storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, receipt of a copy of some or all of the
     same material does not give you any rights to use it.

  10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     <http://www.gnu.org/copyleft/>.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If the
     Document does not specify a version number of this License, you may
     choose any version ever published (not as a draft) by the Free
     Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that
     proxy's public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

  11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A "Massive Multiauthor Collaboration" (or "MMC") contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     "Incorporate" means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of free
software license, such as the GNU General Public License, to permit
their use in free software.


File: gnutls.info,  Node: Bibliography,  Next: Function and Data Index,  Prev: Copying Information,  Up: Top

Bibliography
************

[CBCATT]
     Bodo Moeller, "Security of CBC Ciphersuites in SSL/TLS: Problems
     and Countermeasures", 2002, available from
     <http://www.openssl.org/~bodo/tls-cbc.txt>.

[GPGH]
     Mike Ashley, "The GNU Privacy Handbook", 2002, available from
     <http://www.gnupg.org/gph/en/manual.pdf>.

[GUTPKI]
     Peter Gutmann, "Everything you never wanted to know about PKI but
     were forced to find out", Available from
     <http://www.cs.auckland.ac.nz/~pgut001/>.

[PRNGATTACKS]
     John Kelsey and Bruce Schneier, "Cryptanalytic Attacks on
     Pseudorandom Number Generators", Available from
     <https://www.schneier.com/academic/paperfiles/paper-prngs.pdf>.

[KEYPIN]
     Chris Evans and Chris Palmer, "Public Key Pinning Extension for
     HTTP", Available from
     <http://tools.ietf.org/html/draft-ietf-websec-key-pinning-01>.

[NISTSP80057]
     NIST Special Publication 800-57, "Recommendation for Key Management
     - Part 1: General (Revised)", March 2007, available from
     <http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf>.

[RFC7413]
     Y. Cheng and J. Chu and S. Radhakrishnan and A. Jain, "TCP Fast
     Open", December 2014, Available from
     <http://www.ietf.org/rfc/rfc7413.txt>.

[RFC6125]
     Peter Saint-Andre and Jeff Hodges, "Representation and Verification
     of Domain-Based Application Service Identity within Internet Public
     Key Infrastructure Using X.509 (PKIX) Certificates in the Context
     of Transport Layer Security (TLS)", March 2011, Available from
     <http://www.ietf.org/rfc/rfc6125.txt>.

[RFC7685]
     Adam Langley, "A Transport Layer Security (TLS) ClientHello Padding
     Extension", October 2015, Available from
     <http://www.ietf.org/rfc/rfc7685.txt>.

[RFC7613]
     Peter Saint-Andre and Alexey Melnikov, "Preparation, Enforcement,
     and Comparison of Internationalized Strings Representing Usernames
     and Passwords", August 2015, Available from
     <http://www.ietf.org/rfc/rfc7613.txt>.

[RFC2246]
     Tim Dierks and Christopher Allen, "The TLS Protocol Version 1.0",
     January 1999, Available from <http://www.ietf.org/rfc/rfc2246.txt>.

[RFC6083]
     M. Tuexen and R. Seggelmann and E. Rescorla, "Datagram Transport
     Layer Security (DTLS) for Stream Control Transmission Protocol
     (SCTP)", January 2011, Available from
     <http://www.ietf.org/rfc/rfc6083.txt>.

[RFC4418]
     Ted Krovetz, "UMAC: Message Authentication Code using Universal
     Hashing", March 2006, Available from
     <http://www.ietf.org/rfc/rfc4418.txt>.

[RFC4680]
     S. Santesson, "TLS Handshake Message for Supplemental Data",
     September 2006, Available from
     <http://www.ietf.org/rfc/rfc4680.txt>.

[RFC7633]
     P. Hallam-Baker, "X.509v3 Transport Layer Security (TLS) Feature
     Extension", October 2015, Available from
     <http://www.ietf.org/rfc/rfc7633.txt>.

[RFC7919]
     D. Gillmor, "Negotiated Finite Field Diffie-Hellman Ephemeral
     Parameters for Transport Layer Security (TLS)", August 2016,
     Available from <http://www.ietf.org/rfc/rfc7919.txt>.

[RFC4514]
     Kurt D. Zeilenga, "Lightweight Directory Access Protocol (LDAP):
     String Representation of Distinguished Names", June 2006, Available
     from <http://www.ietf.org/rfc/rfc4513.txt>.

[RFC4346]
     Tim Dierks and Eric Rescorla, "The TLS Protocol Version 1.1", Match
     2006, Available from <http://www.ietf.org/rfc/rfc4346.txt>.

[RFC4347]
     Eric Rescorla and Nagendra Modadugu, "Datagram Transport Layer
     Security", April 2006, Available from
     <http://www.ietf.org/rfc/rfc4347.txt>.

[RFC5246]
     Tim Dierks and Eric Rescorla, "The TLS Protocol Version 1.2",
     August 2008, Available from <http://www.ietf.org/rfc/rfc5246.txt>.

[RFC2440]
     Jon Callas, Lutz Donnerhacke, Hal Finney and Rodney Thayer,
     "OpenPGP Message Format", November 1998, Available from
     <http://www.ietf.org/rfc/rfc2440.txt>.

[RFC4880]
     Jon Callas, Lutz Donnerhacke, Hal Finney, David Shaw and Rodney
     Thayer, "OpenPGP Message Format", November 2007, Available from
     <http://www.ietf.org/rfc/rfc4880.txt>.

[RFC4211]
     J. Schaad, "Internet X.509 Public Key Infrastructure Certificate
     Request Message Format (CRMF)", September 2005, Available from
     <http://www.ietf.org/rfc/rfc4211.txt>.

[RFC2817]
     Rohit Khare and Scott Lawrence, "Upgrading to TLS Within HTTP/1.1",
     May 2000, Available from <http://www.ietf.org/rfc/rfc2817.txt>

[RFC2818]
     Eric Rescorla, "HTTP Over TLS", May 2000, Available from
     <http://www.ietf/rfc/rfc2818.txt>.

[RFC2945]
     Tom Wu, "The SRP Authentication and Key Exchange System", September
     2000, Available from <http://www.ietf.org/rfc/rfc2945.txt>.

[RFC7301]
     S. Friedl, A. Popov, A. Langley, E. Stephan, "Transport Layer
     Security (TLS) Application-Layer Protocol Negotiation Extension",
     July 2014, Available from <http://www.ietf.org/rfc/rfc7301.txt>.

[RFC2986]
     Magnus Nystrom and Burt Kaliski, "PKCS 10 v1.7: Certification
     Request Syntax Specification", November 2000, Available from
     <http://www.ietf.org/rfc/rfc2986.txt>.

[PKIX]
     D. Cooper, S. Santesson, S. Farrel, S. Boeyen, R. Housley, W. Polk,
     "Internet X.509 Public Key Infrastructure Certificate and
     Certificate Revocation List (CRL) Profile", May 2008, available
     from <http://www.ietf.org/rfc/rfc5280.txt>.

[RFC3749]
     Scott Hollenbeck, "Transport Layer Security Protocol Compression
     Methods", May 2004, available from
     <http://www.ietf.org/rfc/rfc3749.txt>.

[RFC3820]
     Steven Tuecke, Von Welch, Doug Engert, Laura Pearlman, and Mary
     Thompson, "Internet X.509 Public Key Infrastructure (PKI) Proxy
     Certificate Profile", June 2004, available from
     <http://www.ietf.org/rfc/rfc3820>.

[RFC6520]
     R. Seggelmann, M. Tuexen, and M. Williams, "Transport Layer
     Security (TLS) and Datagram Transport Layer Security (DTLS)
     Heartbeat Extension", February 2012, available from
     <http://www.ietf.org/rfc/rfc6520>.

[RFC5746]
     E. Rescorla, M. Ray, S. Dispensa, and N. Oskov, "Transport Layer
     Security (TLS) Renegotiation Indication Extension", February 2010,
     available from <http://www.ietf.org/rfc/rfc5746>.

[RFC5280]
     D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, and W.
     Polk, "Internet X.509 Public Key Infrastructure Certificate and
     Certificate Revocation List (CRL) Profile", May 2008, available
     from <http://www.ietf.org/rfc/rfc5280>.

[TLSTKT]
     Joseph Salowey, Hao Zhou, Pasi Eronen, Hannes Tschofenig,
     "Transport Layer Security (TLS) Session Resumption without
     Server-Side State", January 2008, available from
     <http://www.ietf.org/rfc/rfc5077>.

[PKCS12]
     RSA Laboratories, "PKCS 12 v1.0: Personal Information Exchange
     Syntax", June 1999, Available from <http://www.rsa.com>.

[PKCS11]
     RSA Laboratories, "PKCS #11 Base Functionality v2.30: Cryptoki –
     Draft 4", July 2009, Available from <http://www.rsa.com>.

[RESCORLA]
     Eric Rescorla, "SSL and TLS: Designing and Building Secure
     Systems", 2001

[SELKEY]
     Arjen Lenstra and Eric Verheul, "Selecting Cryptographic Key
     Sizes", 2003, available from
     <http://www.win.tue.nl/~klenstra/key.pdf>.

[SSL3]
     Alan Freier, Philip Karlton and Paul Kocher, "The Secure Sockets
     Layer (SSL) Protocol Version 3.0", August 2011, Available from
     <http://www.ietf.org/rfc/rfc6101.txt>.

[STEVENS]
     Richard Stevens, "UNIX Network Programming, Volume 1", Prentice
     Hall PTR, January 1998

[TLSEXT]
     Simon Blake-Wilson, Magnus Nystrom, David Hopwood, Jan Mikkelsen
     and Tim Wright, "Transport Layer Security (TLS) Extensions", June
     2003, Available from <http://www.ietf.org/rfc/rfc3546.txt>.

[TLSPGP]
     Nikos Mavrogiannopoulos, "Using OpenPGP keys for TLS
     authentication", January 2011.  Available from
     <http://www.ietf.org/rfc/rfc6091.txt>.

[TLSSRP]
     David Taylor, Trevor Perrin, Tom Wu and Nikos Mavrogiannopoulos,
     "Using SRP for TLS Authentication", November 2007.  Available from
     <http://www.ietf.org/rfc/rfc5054.txt>.

[TLSPSK]
     Pasi Eronen and Hannes Tschofenig, "Pre-shared key Ciphersuites for
     TLS", December 2005, Available from
     <http://www.ietf.org/rfc/rfc4279.txt>.

[TOMSRP]
     Tom Wu, "The Stanford SRP Authentication Project", Available at
     <http://srp.stanford.edu/>.

[WEGER]
     Arjen Lenstra and Xiaoyun Wang and Benne de Weger, "Colliding X.509
     Certificates", Cryptology ePrint Archive, Report 2005/067,
     Available at <http://eprint.iacr.org/>.

[ECRYPT]
     European Network of Excellence in Cryptology II, "ECRYPT II Yearly
     Report on Algorithms and Keysizes (2009-2010)", Available at
     <http://www.ecrypt.eu.org/documents/D.SPA.13.pdf>.

[RFC5056]
     N. Williams, "On the Use of Channel Bindings to Secure Channels",
     November 2007, available from <http://www.ietf.org/rfc/rfc5056>.

[RFC5929]
     J. Altman, N. Williams, L. Zhu, "Channel Bindings for TLS", July
     2010, available from <http://www.ietf.org/rfc/rfc5929>.

[PKCS11URI]
     J. Pechanec, D. Moffat, "The PKCS#11 URI Scheme", April 2015,
     available from <http://www.ietf.org/rfc/rfc7512>.

[TPMURI]
     C. Latze, N. Mavrogiannopoulos, "The TPMKEY URI Scheme", January
     2013, Work in progress, available from
     <http://tools.ietf.org/html/draft-mavrogiannopoulos-tpmuri-01>.

[ANDERSON]
     R. J. Anderson, "Security Engineering: A Guide to Building
     Dependable Distributed Systems", John Wiley \& Sons, Inc., 2001.

[RFC4821]
     M. Mathis, J. Heffner, "Packetization Layer Path MTU Discovery",
     March 2007, available from <http://www.ietf.org/rfc/rfc4821.txt>.

[RFC2560]
     M. Myers et al, "X.509 Internet Public Key Infrastructure Online
     Certificate Status Protocol - OCSP", June 1999, Available from
     <http://www.ietf.org/rfc/rfc2560.txt>.

[RIVESTCRL]
     R. L. Rivest, "Can We Eliminate Certificate Revocation Lists?",
     Proceedings of Financial Cryptography '98; Springer Lecture Notes
     in Computer Science No.  1465 (Rafael Hirschfeld, ed.), February
     1998), pages 178-183, available from
     <http://people.csail.mit.edu/rivest/Rivest-CanWeEliminateCertificateRevocationLists.pdf>.


File: gnutls.info,  Node: Function and Data Index,  Next: Concept Index,  Prev: Bibliography,  Up: Top

Function and Data Index
***********************

 [index ]
* Menu:

* dane_cert_type_name:                   DANE API.           (line   13)
* dane_cert_usage_name:                  DANE API.           (line   24)
* dane_match_type_name:                  DANE API.           (line   36)
* dane_query_data:                       DANE API.           (line   47)
* dane_query_deinit:                     DANE API.           (line   70)
* dane_query_entries:                    DANE API.           (line   78)
* dane_query_status:                     DANE API.           (line   88)
* dane_query_tlsa:                       DANE API.           (line   99)
* dane_query_to_raw_tlsa:                DANE API.           (line  120)
* dane_raw_tlsa:                         DANE API.           (line  155)
* dane_state_deinit:                     DANE API.           (line  185)
* dane_state_init:                       DANE API.           (line  193)
* dane_state_set_dlv_file:               DANE API.           (line  208)
* dane_strerror:                         DANE API.           (line  220)
* dane_verification_status_print:        DANE API.           (line  234)
* dane_verify_crt:                       Certificate verification.
                                                             (line  174)
* dane_verify_crt <1>:                   DANE API.           (line  253)
* dane_verify_crt_raw:                   DANE API.           (line  307)
* dane_verify_session_crt:               DANE API.           (line  343)
* gnutls_aead_cipher_decrypt:            Cryptographic API.  (line   16)
* gnutls_aead_cipher_deinit:             Cryptographic API.  (line   53)
* gnutls_aead_cipher_encrypt:            Cryptographic API.  (line   65)
* gnutls_aead_cipher_init:               Cryptographic API.  (line  101)
* gnutls_alert_get:                      Handling alerts.    (line   18)
* gnutls_alert_get <1>:                  Core TLS API.       (line   11)
* gnutls_alert_get_name:                 Handling alerts.    (line   31)
* gnutls_alert_get_name <1>:             Core TLS API.       (line   27)
* gnutls_alert_get_strname:              Core TLS API.       (line   40)
* gnutls_alert_send:                     Handling alerts.    (line   45)
* gnutls_alert_send <1>:                 Core TLS API.       (line   54)
* gnutls_alert_send_appropriate:         Core TLS API.       (line   78)
* gnutls_alpn_get_selected_protocol:     Core TLS API.       (line  101)
* gnutls_alpn_set_protocols:             Core TLS API.       (line  122)
* gnutls_anon_allocate_client_credentials: Core TLS API.     (line  148)
* gnutls_anon_allocate_server_credentials: Core TLS API.     (line  159)
* gnutls_anon_free_client_credentials:   Core TLS API.       (line  170)
* gnutls_anon_free_server_credentials:   Core TLS API.       (line  179)
* gnutls_anon_set_params_function:       Core TLS API.       (line  188)
* gnutls_anon_set_server_dh_params:      Core TLS API.       (line  202)
* gnutls_anon_set_server_known_dh_params: Core TLS API.      (line  216)
* gnutls_anon_set_server_params_function: Core TLS API.      (line  236)
* gnutls_auth_client_get_type:           Core TLS API.       (line  250)
* gnutls_auth_get_type:                  Core TLS API.       (line  264)
* gnutls_auth_server_get_type:           Core TLS API.       (line  282)
* gnutls_base64_decode2:                 Core TLS API.       (line  296)
* gnutls_base64_encode2:                 Core TLS API.       (line  315)
* gnutls_buffer_append_data:             Core TLS API.       (line  335)
* gnutls_bye:                            Data transfer and termination.
                                                             (line  151)
* gnutls_bye <1>:                        Core TLS API.       (line  353)
* gnutls_certificate_activation_time_peers: Core TLS API.    (line  389)
* gnutls_certificate_allocate_credentials: Core TLS API.     (line  403)
* gnutls_certificate_client_get_request_status: Core TLS API.
                                                             (line  414)
* gnutls_certificate_expiration_time_peers: Core TLS API.    (line  427)
* gnutls_certificate_free_cas:           Core TLS API.       (line  458)
* gnutls_certificate_free_ca_names:      Core TLS API.       (line  441)
* gnutls_certificate_free_credentials:   Core TLS API.       (line  470)
* gnutls_certificate_free_crls:          Core TLS API.       (line  483)
* gnutls_certificate_free_keys:          Core TLS API.       (line  493)
* gnutls_certificate_get_crt_raw:        Core TLS API.       (line  505)
* gnutls_certificate_get_issuer:         Core TLS API.       (line  532)
* gnutls_certificate_get_ours:           Core TLS API.       (line  562)
* gnutls_certificate_get_peers:          Core TLS API.       (line  577)
* gnutls_certificate_get_peers_subkey_id: Core TLS API.      (line  602)
* gnutls_certificate_get_trust_list:     X509 certificate API.
                                                             (line   12)
* gnutls_certificate_get_verify_flags:   Core TLS API.       (line  617)
* gnutls_certificate_get_x509_crt:       Core TLS API.       (line  631)
* gnutls_certificate_get_x509_key:       Core TLS API.       (line  672)
* gnutls_certificate_send_x509_rdn_sequence: Certificate credentials.
                                                             (line  180)
* gnutls_certificate_send_x509_rdn_sequence <1>: Core TLS API.
                                                             (line  708)
* gnutls_certificate_server_set_request: Certificate credentials.
                                                             (line  168)
* gnutls_certificate_server_set_request <1>: Core TLS API.   (line  726)
* gnutls_certificate_set_dh_params:      Core TLS API.       (line  741)
* gnutls_certificate_set_flags:          Core TLS API.       (line  758)
* gnutls_certificate_set_key:            Certificate credentials.
                                                             (line   64)
* gnutls_certificate_set_key <1>:        Abstract key API.   (line   12)
* gnutls_certificate_set_known_dh_params: Core TLS API.      (line  773)
* gnutls_certificate_set_ocsp_status_request_file: Core TLS API.
                                                             (line  793)
* gnutls_certificate_set_ocsp_status_request_function: Core TLS API.
                                                             (line  824)
* gnutls_certificate_set_ocsp_status_request_function2: Core TLS API.
                                                             (line  859)
* gnutls_certificate_set_params_function: Core TLS API.      (line  898)
* gnutls_certificate_set_pin_function:   Certificate credentials.
                                                             (line   40)
* gnutls_certificate_set_pin_function <1>: Core TLS API.     (line  913)
* gnutls_certificate_set_retrieve_function: Core TLS API.    (line  934)
* gnutls_certificate_set_retrieve_function2: Abstract key API.
                                                             (line   60)
* gnutls_certificate_set_trust_list:     X509 certificate API.
                                                             (line   30)
* gnutls_certificate_set_verify_flags:   Core TLS API.       (line  984)
* gnutls_certificate_set_verify_function: Core TLS API.      (line  997)
* gnutls_certificate_set_verify_limits:  Core TLS API.       (line 1026)
* gnutls_certificate_set_x509_crl:       Core TLS API.       (line 1045)
* gnutls_certificate_set_x509_crl_file:  Core TLS API.       (line 1069)
* gnutls_certificate_set_x509_crl_mem:   Core TLS API.       (line 1091)
* gnutls_certificate_set_x509_key:       Core TLS API.       (line 1113)
* gnutls_certificate_set_x509_key_file:  Core TLS API.       (line 1153)
* gnutls_certificate_set_x509_key_file2: Core TLS API.       (line 1205)
* gnutls_certificate_set_x509_key_mem:   Core TLS API.       (line 1262)
* gnutls_certificate_set_x509_key_mem2:  Core TLS API.       (line 1303)
* gnutls_certificate_set_x509_simple_pkcs12_file: Core TLS API.
                                                             (line 1349)
* gnutls_certificate_set_x509_simple_pkcs12_mem: Core TLS API.
                                                             (line 1397)
* gnutls_certificate_set_x509_system_trust: Certificate credentials.
                                                             (line  220)
* gnutls_certificate_set_x509_system_trust <1>: Core TLS API.
                                                             (line 1447)
* gnutls_certificate_set_x509_trust:     Core TLS API.       (line 1465)
* gnutls_certificate_set_x509_trust_dir: Core TLS API.       (line 1492)
* gnutls_certificate_set_x509_trust_file: Core TLS API.      (line 1514)
* gnutls_certificate_set_x509_trust_mem: Core TLS API.       (line 1544)
* gnutls_certificate_type_get:           Core TLS API.       (line 1569)
* gnutls_certificate_type_get_id:        Core TLS API.       (line 1582)
* gnutls_certificate_type_get_name:      Core TLS API.       (line 1594)
* gnutls_certificate_type_list:          Core TLS API.       (line 1606)
* gnutls_certificate_verification_status_print: Core TLS API.
                                                             (line 1617)
* gnutls_certificate_verify_flags:       Verifying a certificate in the context of TLS session.
                                                             (line    6)
* gnutls_certificate_verify_flags <1>:   Certificate verification.
                                                             (line    6)
* gnutls_certificate_verify_peers:       Core TLS API.       (line 1642)
* gnutls_certificate_verify_peers2:      Core TLS API.       (line 1689)
* gnutls_certificate_verify_peers3:      Core TLS API.       (line 1726)
* gnutls_check_version:                  Core TLS API.       (line 1763)
* gnutls_cipher_add_auth:                Cryptographic API.  (line  122)
* gnutls_cipher_decrypt:                 Cryptographic API.  (line  141)
* gnutls_cipher_decrypt2:                Cryptographic API.  (line  163)
* gnutls_cipher_deinit:                  Cryptographic API.  (line  192)
* gnutls_cipher_encrypt:                 Cryptographic API.  (line  203)
* gnutls_cipher_encrypt2:                Cryptographic API.  (line  221)
* gnutls_cipher_get:                     Core TLS API.       (line 1782)
* gnutls_cipher_get_block_size:          Cryptographic API.  (line  246)
* gnutls_cipher_get_id:                  Core TLS API.       (line 1794)
* gnutls_cipher_get_iv_size:             Cryptographic API.  (line  257)
* gnutls_cipher_get_key_size:            Core TLS API.       (line 1806)
* gnutls_cipher_get_name:                Core TLS API.       (line 1818)
* gnutls_cipher_get_tag_size:            Cryptographic API.  (line  270)
* gnutls_cipher_init:                    Cryptographic API.  (line  284)
* gnutls_cipher_list:                    Core TLS API.       (line 1830)
* gnutls_cipher_set_iv:                  Cryptographic API.  (line  307)
* gnutls_cipher_suite_get_name:          Core TLS API.       (line 1846)
* gnutls_cipher_suite_info:              Core TLS API.       (line 1864)
* gnutls_cipher_tag:                     Cryptographic API.  (line  323)
* gnutls_compression_get:                Compatibility API.  (line   13)
* gnutls_compression_get_id:             Compatibility API.  (line   25)
* gnutls_compression_get_name:           Compatibility API.  (line   37)
* gnutls_compression_list:               Compatibility API.  (line   49)
* gnutls_credentials_clear:              Core TLS API.       (line 1894)
* gnutls_credentials_get:                Core TLS API.       (line 1902)
* gnutls_credentials_set:                Session initialization.
                                                             (line   80)
* gnutls_credentials_set <1>:            Core TLS API.       (line 1931)
* gnutls_crypto_register_aead_cipher:    Overriding algorithms.
                                                             (line   55)
* gnutls_crypto_register_aead_cipher <1>: Cryptographic API. (line  341)
* gnutls_crypto_register_cipher:         Overriding algorithms.
                                                             (line   13)
* gnutls_crypto_register_cipher <1>:     Cryptographic API.  (line  383)
* gnutls_crypto_register_digest:         Overriding algorithms.
                                                             (line  130)
* gnutls_crypto_register_digest <1>:     Cryptographic API.  (line  428)
* gnutls_crypto_register_mac:            Overriding algorithms.
                                                             (line   94)
* gnutls_crypto_register_mac <1>:        Cryptographic API.  (line  461)
* gnutls_db_check_entry:                 Core TLS API.       (line 1966)
* gnutls_db_check_entry_time:            Core TLS API.       (line 1980)
* gnutls_db_get_default_cache_expiration: Core TLS API.      (line 1991)
* gnutls_db_get_ptr:                     Core TLS API.       (line 1999)
* gnutls_db_remove_session:              Core TLS API.       (line 2010)
* gnutls_db_set_cache_expiration:        Core TLS API.       (line 2024)
* gnutls_db_set_ptr:                     Core TLS API.       (line 2036)
* gnutls_db_set_remove_function:         Core TLS API.       (line 2048)
* gnutls_db_set_retrieve_function:       Core TLS API.       (line 2063)
* gnutls_db_set_store_function:          Core TLS API.       (line 2083)
* gnutls_decode_ber_digest_info:         Cryptographic API.  (line  500)
* gnutls_decode_rs_value:                Cryptographic API.  (line  523)
* gnutls_deinit:                         Data transfer and termination.
                                                             (line  184)
* gnutls_deinit <1>:                     Core TLS API.       (line 2098)
* gnutls_dh_get_group:                   Core TLS API.       (line 2108)
* gnutls_dh_get_peers_public_bits:       Core TLS API.       (line 2131)
* gnutls_dh_get_prime_bits:              Core TLS API.       (line 2145)
* gnutls_dh_get_pubkey:                  Core TLS API.       (line 2161)
* gnutls_dh_get_secret_bits:             Core TLS API.       (line 2181)
* gnutls_dh_params_cpy:                  Core TLS API.       (line 2194)
* gnutls_dh_params_deinit:               Core TLS API.       (line 2209)
* gnutls_dh_params_export2_pkcs3:        Core TLS API.       (line 2218)
* gnutls_dh_params_export_pkcs3:         Core TLS API.       (line 2242)
* gnutls_dh_params_export_raw:           Core TLS API.       (line 2269)
* gnutls_dh_params_generate2:            Core TLS API.       (line 2291)
* gnutls_dh_params_import_dsa:           Core TLS API.       (line 2321)
* gnutls_dh_params_import_pkcs3:         Core TLS API.       (line 2336)
* gnutls_dh_params_import_raw:           Core TLS API.       (line 2358)
* gnutls_dh_params_import_raw2:          Core TLS API.       (line 2377)
* gnutls_dh_params_init:                 Core TLS API.       (line 2398)
* gnutls_dh_set_prime_bits:              Core TLS API.       (line 2409)
* gnutls_digest_get_id:                  Core TLS API.       (line 2437)
* gnutls_digest_get_name:                Core TLS API.       (line 2450)
* gnutls_digest_get_oid:                 Core TLS API.       (line 2462)
* gnutls_digest_list:                    Core TLS API.       (line 2477)
* gnutls_dtls_cookie_send:               Datagram TLS API.   (line   11)
* gnutls_dtls_cookie_verify:             Datagram TLS API.   (line   45)
* gnutls_dtls_get_data_mtu:              Datagram TLS API.   (line   74)
* gnutls_dtls_get_mtu:                   Datagram TLS API.   (line   89)
* gnutls_dtls_get_timeout:               Setting up the transport layer.
                                                             (line  194)
* gnutls_dtls_get_timeout <1>:           Datagram TLS API.   (line  104)
* gnutls_dtls_prestate_set:              Datagram TLS API.   (line  121)
* gnutls_dtls_set_data_mtu:              Datagram TLS API.   (line  139)
* gnutls_dtls_set_mtu:                   Datagram TLS API.   (line  165)
* gnutls_dtls_set_timeouts:              Datagram TLS API.   (line  182)
* gnutls_ecc_curve_get:                  Core TLS API.       (line 2491)
* gnutls_ecc_curve_get_id:               Core TLS API.       (line 2505)
* gnutls_ecc_curve_get_name:             Core TLS API.       (line 2519)
* gnutls_ecc_curve_get_oid:              Core TLS API.       (line 2533)
* gnutls_ecc_curve_get_pk:               Core TLS API.       (line 2547)
* gnutls_ecc_curve_get_size:             Core TLS API.       (line 2559)
* gnutls_ecc_curve_list:                 Core TLS API.       (line 2569)
* gnutls_encode_ber_digest_info:         Cryptographic API.  (line  547)
* gnutls_encode_rs_value:                Cryptographic API.  (line  567)
* gnutls_error_is_fatal:                 Data transfer and termination.
                                                             (line   78)
* gnutls_error_is_fatal <1>:             Core TLS API.       (line 2581)
* gnutls_error_to_alert:                 Handling alerts.    (line   66)
* gnutls_error_to_alert <1>:             Core TLS API.       (line 2601)
* gnutls_est_record_overhead_size:       Core TLS API.       (line 2620)
* gnutls_ext_get_data:                   Core TLS API.       (line 2647)
* gnutls_ext_get_name:                   Core TLS API.       (line 2666)
* gnutls_ext_register:                   Core TLS API.       (line 2677)
* gnutls_ext_set_data:                   Core TLS API.       (line 2720)
* gnutls_fingerprint:                    Core TLS API.       (line 2737)
* gnutls_fips140_mode_enabled:           Core TLS API.       (line 2764)
* gnutls_global_deinit:                  Core TLS API.       (line 2775)
* gnutls_global_init:                    Core TLS API.       (line 2788)
* gnutls_global_set_audit_log_function:  Debugging and auditing.
                                                             (line   63)
* gnutls_global_set_audit_log_function <1>: Core TLS API.    (line 2817)
* gnutls_global_set_log_function:        Core TLS API.       (line 2836)
* gnutls_global_set_log_level:           Core TLS API.       (line 2851)
* gnutls_global_set_mem_functions:       Compatibility API.  (line   60)
* gnutls_global_set_mutex:               Core TLS API.       (line 2864)
* gnutls_global_set_time_function:       Core TLS API.       (line 2893)
* gnutls_group_get:                      Core TLS API.       (line 2907)
* gnutls_group_get_id:                   Core TLS API.       (line 2920)
* gnutls_group_get_name:                 Core TLS API.       (line 2933)
* gnutls_group_list:                     Core TLS API.       (line 2946)
* gnutls_handshake:                      TLS handshake.      (line   10)
* gnutls_handshake <1>:                  Core TLS API.       (line 2960)
* gnutls_handshake_description_get_name: Core TLS API.       (line 3001)
* gnutls_handshake_get_last_in:          Core TLS API.       (line 3013)
* gnutls_handshake_get_last_out:         Core TLS API.       (line 3030)
* gnutls_handshake_set_hook_function:    Core TLS API.       (line 3047)
* gnutls_handshake_set_max_packet_length: Core TLS API.      (line 3083)
* gnutls_handshake_set_post_client_hello_function: Core TLS API.
                                                             (line 3104)
* gnutls_handshake_set_private_extensions: Core TLS API.     (line 3135)
* gnutls_handshake_set_random:           Core TLS API.       (line 3154)
* gnutls_handshake_set_timeout:          TLS handshake.      (line   48)
* gnutls_handshake_set_timeout <1>:      Core TLS API.       (line 3176)
* gnutls_hash:                           Cryptographic API.  (line  588)
* gnutls_hash_deinit:                    Cryptographic API.  (line  606)
* gnutls_hash_fast:                      Cryptographic API.  (line  620)
* gnutls_hash_get_len:                   Cryptographic API.  (line  640)
* gnutls_hash_init:                      Cryptographic API.  (line  654)
* gnutls_hash_output:                    Cryptographic API.  (line  672)
* gnutls_heartbeat_allowed:              Core TLS API.       (line 3196)
* gnutls_heartbeat_enable:               Core TLS API.       (line 3213)
* gnutls_heartbeat_get_timeout:          Core TLS API.       (line 3237)
* gnutls_heartbeat_ping:                 Core TLS API.       (line 3253)
* gnutls_heartbeat_pong:                 Core TLS API.       (line 3285)
* gnutls_heartbeat_set_timeouts:         Core TLS API.       (line 3301)
* gnutls_hex2bin:                        Core TLS API.       (line 3323)
* gnutls_hex_decode:                     Core TLS API.       (line 3346)
* gnutls_hex_decode2:                    Core TLS API.       (line 3368)
* gnutls_hex_encode:                     Core TLS API.       (line 3383)
* gnutls_hex_encode2:                    Core TLS API.       (line 3402)
* gnutls_hmac:                           Cryptographic API.  (line  686)
* gnutls_hmac_deinit:                    Cryptographic API.  (line  704)
* gnutls_hmac_fast:                      Cryptographic API.  (line  718)
* gnutls_hmac_get_len:                   Cryptographic API.  (line  743)
* gnutls_hmac_init:                      Cryptographic API.  (line  757)
* gnutls_hmac_output:                    Cryptographic API.  (line  783)
* gnutls_hmac_set_nonce:                 Cryptographic API.  (line  797)
* gnutls_idna_map:                       Core TLS API.       (line 3420)
* gnutls_idna_reverse_map:               Core TLS API.       (line 3451)
* gnutls_init:                           Session initialization.
                                                             (line   14)
* gnutls_init <1>:                       Core TLS API.       (line 3477)
* gnutls_key_generate:                   Core TLS API.       (line 3500)
* gnutls_kx_get:                         Core TLS API.       (line 3517)
* gnutls_kx_get_id:                      Core TLS API.       (line 3529)
* gnutls_kx_get_name:                    Core TLS API.       (line 3541)
* gnutls_kx_list:                        Core TLS API.       (line 3553)
* gnutls_load_file:                      Core TLS API.       (line 3565)
* gnutls_mac_get:                        Core TLS API.       (line 3583)
* gnutls_mac_get_id:                     Core TLS API.       (line 3595)
* gnutls_mac_get_key_size:               Core TLS API.       (line 3608)
* gnutls_mac_get_name:                   Core TLS API.       (line 3620)
* gnutls_mac_get_nonce_size:             Cryptographic API.  (line  812)
* gnutls_mac_list:                       Core TLS API.       (line 3632)
* gnutls_memcmp:                         Core TLS API.       (line 3644)
* gnutls_memset:                         Core TLS API.       (line 3665)
* gnutls_ocsp_req_add_cert:              OCSP API.           (line   12)
* gnutls_ocsp_req_add_cert_id:           OCSP API.           (line   36)
* gnutls_ocsp_req_deinit:                OCSP API.           (line   69)
* gnutls_ocsp_req_export:                OCSP API.           (line   77)
* gnutls_ocsp_req_get_cert_id:           OCSP API.           (line   91)
* gnutls_ocsp_req_get_extension:         OCSP API.           (line  131)
* gnutls_ocsp_req_get_nonce:             OCSP API.           (line  165)
* gnutls_ocsp_req_get_version:           OCSP API.           (line  184)
* gnutls_ocsp_req_import:                OCSP API.           (line  196)
* gnutls_ocsp_req_init:                  OCSP API.           (line  212)
* gnutls_ocsp_req_print:                 OCSP API.           (line  223)
* gnutls_ocsp_req_randomize_nonce:       OCSP API.           (line  246)
* gnutls_ocsp_req_set_extension:         OCSP API.           (line  259)
* gnutls_ocsp_req_set_nonce:             OCSP API.           (line  280)
* gnutls_ocsp_resp_check_crt:            OCSP API.           (line  298)
* gnutls_ocsp_resp_deinit:               OCSP API.           (line  318)
* gnutls_ocsp_resp_export:               OCSP API.           (line  326)
* gnutls_ocsp_resp_get_certs:            OCSP API.           (line  340)
* gnutls_ocsp_resp_get_extension:        OCSP API.           (line  367)
* gnutls_ocsp_resp_get_nonce:            OCSP API.           (line  401)
* gnutls_ocsp_resp_get_produced:         OCSP API.           (line  421)
* gnutls_ocsp_resp_get_responder:        OCSP API.           (line  433)
* gnutls_ocsp_resp_get_responder2:       OCSP API.           (line  460)
* gnutls_ocsp_resp_get_responder_raw_id: OCSP API.           (line  490)
* gnutls_ocsp_resp_get_response:         OCSP API.           (line  513)
* gnutls_ocsp_resp_get_signature:        OCSP API.           (line  540)
* gnutls_ocsp_resp_get_signature_algorithm: OCSP API.        (line  554)
* gnutls_ocsp_resp_get_single:           OCSP certificate status checking.
                                                             (line  156)
* gnutls_ocsp_resp_get_single <1>:       OCSP API.           (line  568)
* gnutls_ocsp_resp_get_status:           OCSP API.           (line  619)
* gnutls_ocsp_resp_get_version:          OCSP API.           (line  631)
* gnutls_ocsp_resp_import:               OCSP API.           (line  643)
* gnutls_ocsp_resp_init:                 OCSP API.           (line  659)
* gnutls_ocsp_resp_print:                OCSP API.           (line  670)
* gnutls_ocsp_resp_verify:               OCSP API.           (line  693)
* gnutls_ocsp_resp_verify_direct:        OCSP API.           (line  731)
* gnutls_ocsp_status_request_enable_client: Core TLS API.    (line 3682)
* gnutls_ocsp_status_request_get:        Core TLS API.       (line 3710)
* gnutls_ocsp_status_request_is_checked: Core TLS API.       (line 3729)
* gnutls_oid_to_digest:                  Core TLS API.       (line 3759)
* gnutls_oid_to_ecc_curve:               Core TLS API.       (line 3774)
* gnutls_oid_to_mac:                     Core TLS API.       (line 3786)
* gnutls_oid_to_pk:                      Core TLS API.       (line 3801)
* gnutls_oid_to_sign:                    Core TLS API.       (line 3815)
* gnutls_openpgp_privkey_sign_hash:      Compatibility API.  (line   95)
* gnutls_openpgp_send_cert:              Core TLS API.       (line 3830)
* gnutls_packet_deinit:                  Core TLS API.       (line 3843)
* gnutls_packet_get:                     Core TLS API.       (line 3854)
* gnutls_pcert_deinit:                   Abstract key API.   (line  114)
* gnutls_pcert_export_openpgp:           Abstract key API.   (line  124)
* gnutls_pcert_export_x509:              Abstract key API.   (line  139)
* gnutls_pcert_import_openpgp:           Abstract key API.   (line  159)
* gnutls_pcert_import_openpgp_raw:       Abstract key API.   (line  176)
* gnutls_pcert_import_x509:              Abstract key API.   (line  198)
* gnutls_pcert_import_x509_list:         Abstract key API.   (line  218)
* gnutls_pcert_import_x509_raw:          Abstract key API.   (line  246)
* gnutls_pcert_list_import_x509_raw:     Abstract key API.   (line  269)
* gnutls_pem_base64_decode:              Core TLS API.       (line 3872)
* gnutls_pem_base64_decode2:             Core TLS API.       (line 3896)
* gnutls_pem_base64_encode:              Core TLS API.       (line 3924)
* gnutls_pem_base64_encode2:             Core TLS API.       (line 3947)
* gnutls_perror:                         Core TLS API.       (line 3975)
* gnutls_pkcs11_add_provider:            PKCS11 Manual Initialization.
                                                             (line   13)
* gnutls_pkcs11_add_provider <1>:        PKCS 11 API.        (line   12)
* gnutls_pkcs11_copy_attached_extension: PKCS 11 API.        (line   35)
* gnutls_pkcs11_copy_pubkey:             PKCS 11 API.        (line   62)
* gnutls_pkcs11_copy_secret_key:         PKCS 11 API.        (line   95)
* gnutls_pkcs11_copy_x509_crt:           PKCS 11 API.        (line  120)
* gnutls_pkcs11_copy_x509_crt2:          Writing objects.    (line   40)
* gnutls_pkcs11_copy_x509_crt2 <1>:      PKCS 11 API.        (line  142)
* gnutls_pkcs11_copy_x509_privkey:       PKCS 11 API.        (line  172)
* gnutls_pkcs11_copy_x509_privkey2:      Writing objects.    (line   13)
* gnutls_pkcs11_copy_x509_privkey2 <1>:  PKCS 11 API.        (line  198)
* gnutls_pkcs11_crt_is_known:            PKCS 11 API.        (line  228)
* gnutls_pkcs11_deinit:                  PKCS 11 API.        (line  259)
* gnutls_pkcs11_delete_url:              Writing objects.    (line   67)
* gnutls_pkcs11_delete_url <1>:          PKCS 11 API.        (line  270)
* gnutls_pkcs11_get_pin_function:        PKCS 11 API.        (line  287)
* gnutls_pkcs11_get_raw_issuer:          PKCS 11 API.        (line  301)
* gnutls_pkcs11_get_raw_issuer_by_dn:    PKCS 11 API.        (line  327)
* gnutls_pkcs11_get_raw_issuer_by_subject_key_id: PKCS 11 API.
                                                             (line  356)
* gnutls_pkcs11_init:                    PKCS11 Manual Initialization.
                                                             (line   38)
* gnutls_pkcs11_init <1>:                PKCS 11 API.        (line  388)
* gnutls_pkcs11_obj_deinit:              PKCS 11 API.        (line  415)
* gnutls_pkcs11_obj_export:              PKCS 11 API.        (line  425)
* gnutls_pkcs11_obj_export2:             PKCS 11 API.        (line  450)
* gnutls_pkcs11_obj_export3:             PKCS 11 API.        (line  470)
* gnutls_pkcs11_obj_export_url:          PKCS 11 API.        (line  492)
* gnutls_pkcs11_obj_flags_get_str:       PKCS 11 API.        (line  510)
* gnutls_pkcs11_obj_get_exts:            PKCS 11 API.        (line  526)
* gnutls_pkcs11_obj_get_flags:           PKCS 11 API.        (line  554)
* gnutls_pkcs11_obj_get_info:            Reading objects.    (line   28)
* gnutls_pkcs11_obj_get_info <1>:        PKCS 11 API.        (line  572)
* gnutls_pkcs11_obj_get_type:            PKCS 11 API.        (line  601)
* gnutls_pkcs11_obj_import_url:          PKCS 11 API.        (line  615)
* gnutls_pkcs11_obj_init:                PKCS 11 API.        (line  641)
* gnutls_pkcs11_obj_list_import_url3:    PKCS 11 API.        (line  654)
* gnutls_pkcs11_obj_list_import_url4:    PKCS 11 API.        (line  701)
* gnutls_pkcs11_obj_set_info:            PKCS 11 API.        (line  743)
* gnutls_pkcs11_obj_set_pin_function:    PKCS 11 API.        (line  768)
* gnutls_pkcs11_privkey_cpy:             PKCS 11 API.        (line  786)
* gnutls_pkcs11_privkey_deinit:          PKCS 11 API.        (line  803)
* gnutls_pkcs11_privkey_export_pubkey:   PKCS 11 API.        (line  812)
* gnutls_pkcs11_privkey_export_url:      PKCS 11 API.        (line  837)
* gnutls_pkcs11_privkey_generate:        PKCS 11 API.        (line  854)
* gnutls_pkcs11_privkey_generate2:       PKCS 11 API.        (line  879)
* gnutls_pkcs11_privkey_generate3:       PKCS 11 API.        (line  915)
* gnutls_pkcs11_privkey_get_info:        PKCS 11 API.        (line  956)
* gnutls_pkcs11_privkey_get_pk_algorithm: PKCS 11 API.       (line  979)
* gnutls_pkcs11_privkey_import_url:      PKCS 11 API.        (line  995)
* gnutls_pkcs11_privkey_init:            PKCS 11 API.        (line 1015)
* gnutls_pkcs11_privkey_set_pin_function: PKCS 11 API.       (line 1033)
* gnutls_pkcs11_privkey_status:          PKCS 11 API.        (line 1051)
* gnutls_pkcs11_reinit:                  PKCS 11 API.        (line 1065)
* gnutls_pkcs11_set_pin_function:        PKCS 11 API.        (line 1082)
* gnutls_pkcs11_set_token_function:      PKCS 11 API.        (line 1097)
* gnutls_pkcs11_token_check_mechanism:   PKCS 11 API.        (line 1111)
* gnutls_pkcs11_token_get_flags:         PKCS 11 API.        (line 1136)
* gnutls_pkcs11_token_get_info:          PKCS 11 API.        (line 1156)
* gnutls_pkcs11_token_get_mechanism:     PKCS 11 API.        (line 1179)
* gnutls_pkcs11_token_get_random:        PKCS 11 API.        (line 1199)
* gnutls_pkcs11_token_get_url:           PKCS 11 API.        (line 1217)
* gnutls_pkcs11_token_init:              PKCS 11 API.        (line 1237)
* gnutls_pkcs11_token_set_pin:           PKCS 11 API.        (line 1256)
* gnutls_pkcs11_type_get_name:           PKCS 11 API.        (line 1276)
* gnutls_pkcs12_bag_decrypt:             PKCS 12 API.        (line   12)
* gnutls_pkcs12_bag_deinit:              PKCS 12 API.        (line   27)
* gnutls_pkcs12_bag_encrypt:             PKCS 12 API.        (line   71)
* gnutls_pkcs12_bag_enc_info:            PKCS 12 API.        (line   35)
* gnutls_pkcs12_bag_get_count:           PKCS 12 API.        (line   88)
* gnutls_pkcs12_bag_get_data:            PKCS 12 API.        (line  100)
* gnutls_pkcs12_bag_get_friendly_name:   PKCS 12 API.        (line  118)
* gnutls_pkcs12_bag_get_key_id:          PKCS 12 API.        (line  137)
* gnutls_pkcs12_bag_get_type:            PKCS 12 API.        (line  156)
* gnutls_pkcs12_bag_init:                PKCS 12 API.        (line  170)
* gnutls_pkcs12_bag_set_crl:             PKCS 12 API.        (line  183)
* gnutls_pkcs12_bag_set_crt:             PKCS 12 API.        (line  198)
* gnutls_pkcs12_bag_set_data:            PKCS 12 API.        (line  213)
* gnutls_pkcs12_bag_set_friendly_name:   PKCS 12 API.        (line  230)
* gnutls_pkcs12_bag_set_key_id:          PKCS 12 API.        (line  250)
* gnutls_pkcs12_bag_set_privkey:         PKCS 12 API.        (line  270)
* gnutls_pkcs12_deinit:                  PKCS 12 API.        (line  291)
* gnutls_pkcs12_export:                  PKCS 12 API.        (line  299)
* gnutls_pkcs12_export2:                 PKCS 12 API.        (line  327)
* gnutls_pkcs12_generate_mac:            PKCS 12 API.        (line  351)
* gnutls_pkcs12_generate_mac2:           PKCS 12 API.        (line  365)
* gnutls_pkcs12_get_bag:                 PKCS 12 API.        (line  381)
* gnutls_pkcs12_import:                  PKCS 12 API.        (line  401)
* gnutls_pkcs12_init:                    PKCS 12 API.        (line  424)
* gnutls_pkcs12_mac_info:                PKCS 12 API.        (line  437)
* gnutls_pkcs12_set_bag:                 PKCS 12 API.        (line  470)
* gnutls_pkcs12_simple_parse:            Managing encrypted keys.
                                                             (line  148)
* gnutls_pkcs12_simple_parse <1>:        PKCS 12 API.        (line  484)
* gnutls_pkcs12_verify_mac:              PKCS 12 API.        (line  551)
* gnutls_pkcs7_add_attr:                 PKCS 7 API.         (line   12)
* gnutls_pkcs7_attrs_deinit:             PKCS 7 API.         (line   36)
* gnutls_pkcs7_deinit:                   PKCS 7 API.         (line   46)
* gnutls_pkcs7_delete_crl:               PKCS 7 API.         (line   54)
* gnutls_pkcs7_delete_crt:               PKCS 7 API.         (line   69)
* gnutls_pkcs7_export:                   PKCS 7 API.         (line   84)
* gnutls_pkcs7_export2:                  PKCS 7 API.         (line  111)
* gnutls_pkcs7_get_attr:                 PKCS 7 API.         (line  134)
* gnutls_pkcs7_get_crl_count:            PKCS 7 API.         (line  161)
* gnutls_pkcs7_get_crl_raw:              PKCS 7 API.         (line  173)
* gnutls_pkcs7_get_crl_raw2:             PKCS 7 API.         (line  194)
* gnutls_pkcs7_get_crt_count:            PKCS 7 API.         (line  214)
* gnutls_pkcs7_get_crt_raw:              PKCS 7 API.         (line  226)
* gnutls_pkcs7_get_crt_raw2:             PKCS 7 API.         (line  251)
* gnutls_pkcs7_get_embedded_data:        PKCS 7 API.         (line  276)
* gnutls_pkcs7_get_embedded_data_oid:    PKCS 7 API.         (line  303)
* gnutls_pkcs7_get_signature_count:      PKCS 7 API.         (line  319)
* gnutls_pkcs7_get_signature_info:       PKCS 7 API.         (line  334)
* gnutls_pkcs7_import:                   PKCS 7 API.         (line  355)
* gnutls_pkcs7_init:                     PKCS 7 API.         (line  375)
* gnutls_pkcs7_print:                    PKCS 7 API.         (line  388)
* gnutls_pkcs7_set_crl:                  PKCS 7 API.         (line  411)
* gnutls_pkcs7_set_crl_raw:              PKCS 7 API.         (line  426)
* gnutls_pkcs7_set_crt:                  PKCS 7 API.         (line  440)
* gnutls_pkcs7_set_crt_raw:              PKCS 7 API.         (line  456)
* gnutls_pkcs7_sign:                     Public key algorithms.
                                                             (line   35)
* gnutls_pkcs7_sign <1>:                 PKCS 7 API.         (line  471)
* gnutls_pkcs7_signature_info_deinit:    PKCS 7 API.         (line  512)
* gnutls_pkcs7_verify:                   PKCS 7 API.         (line  524)
* gnutls_pkcs7_verify_direct:            PKCS 7 API.         (line  557)
* gnutls_pkcs8_info:                     X509 certificate API.
                                                             (line   54)
* gnutls_pkcs_schema_get_name:           X509 certificate API.
                                                             (line   94)
* gnutls_pkcs_schema_get_oid:            X509 certificate API.
                                                             (line  109)
* gnutls_pk_algorithm_get_name:          Core TLS API.       (line 3984)
* gnutls_pk_bits_to_sec_param:           Selecting cryptographic key sizes.
                                                             (line   90)
* gnutls_pk_bits_to_sec_param <1>:       Core TLS API.       (line 3996)
* gnutls_pk_get_id:                      Core TLS API.       (line 4013)
* gnutls_pk_get_name:                    Core TLS API.       (line 4028)
* gnutls_pk_get_oid:                     Core TLS API.       (line 4042)
* gnutls_pk_list:                        Core TLS API.       (line 4057)
* gnutls_pk_to_sign:                     Core TLS API.       (line 4071)
* gnutls_prf:                            Core TLS API.       (line 4086)
* gnutls_prf_raw:                        Core TLS API.       (line 4134)
* gnutls_prf_rfc5705:                    Core TLS API.       (line 4173)
* gnutls_priority_certificate_type_list: Core TLS API.       (line 4217)
* gnutls_priority_cipher_list:           Core TLS API.       (line 4233)
* gnutls_priority_compression_list:      Compatibility API.  (line  111)
* gnutls_priority_deinit:                Core TLS API.       (line 4248)
* gnutls_priority_ecc_curve_list:        Core TLS API.       (line 4257)
* gnutls_priority_get_cipher_suite_index: Core TLS API.      (line 4275)
* gnutls_priority_group_list:            Core TLS API.       (line 4300)
* gnutls_priority_init:                  Core TLS API.       (line 4315)
* gnutls_priority_kx_list:               Core TLS API.       (line 4416)
* gnutls_priority_mac_list:              Core TLS API.       (line 4432)
* gnutls_priority_protocol_list:         Core TLS API.       (line 4447)
* gnutls_priority_set:                   Core TLS API.       (line 4463)
* gnutls_priority_set_direct:            Core TLS API.       (line 4477)
* gnutls_priority_sign_list:             Core TLS API.       (line 4500)
* gnutls_priority_string_list:           Core TLS API.       (line 4516)
* gnutls_privkey_decrypt_data:           Operations.         (line  144)
* gnutls_privkey_decrypt_data <1>:       Abstract key API.   (line  300)
* gnutls_privkey_deinit:                 Abstract key API.   (line  323)
* gnutls_privkey_export_dsa_raw:         Abstract key API.   (line  333)
* gnutls_privkey_export_dsa_raw2:        Abstract key API.   (line  360)
* gnutls_privkey_export_ecc_raw:         Abstract key API.   (line  389)
* gnutls_privkey_export_ecc_raw2:        Abstract key API.   (line  414)
* gnutls_privkey_export_openpgp:         Abstract key API.   (line  441)
* gnutls_privkey_export_pkcs11:          Abstract key API.   (line  456)
* gnutls_privkey_export_rsa_raw:         Abstract key API.   (line  475)
* gnutls_privkey_export_rsa_raw2:        Abstract key API.   (line  510)
* gnutls_privkey_export_x509:            Abstract key API.   (line  546)
* gnutls_privkey_generate:               Abstract key API.   (line  566)
* gnutls_privkey_generate2:              Abstract key API.   (line  601)
* gnutls_privkey_get_pk_algorithm:       Abstract key API.   (line  638)
* gnutls_privkey_get_seed:               Abstract key API.   (line  657)
* gnutls_privkey_get_spki:               Abstract key API.   (line  682)
* gnutls_privkey_get_type:               Abstract key API.   (line  702)
* gnutls_privkey_import_dsa_raw:         Abstract key API.   (line  717)
* gnutls_privkey_import_ecc_raw:         Abstract key API.   (line  743)
* gnutls_privkey_import_ext:             Abstract key API.   (line  768)
* gnutls_privkey_import_ext2:            Abstract key API.   (line  803)
* gnutls_privkey_import_ext3:            Abstract private keys.
                                                             (line   45)
* gnutls_privkey_import_ext3 <1>:        Abstract key API.   (line  842)
* gnutls_privkey_import_ext4:            Abstract key API.   (line  885)
* gnutls_privkey_import_openpgp:         Abstract key API.   (line  949)
* gnutls_privkey_import_openpgp_raw:     Abstract key API.   (line  966)
* gnutls_privkey_import_pkcs11:          Abstract key API.   (line  989)
* gnutls_privkey_import_pkcs11_url:      Abstract key API.   (line 1015)
* gnutls_privkey_import_rsa_raw:         Abstract key API.   (line 1032)
* gnutls_privkey_import_tpm_raw:         Abstract key API.   (line 1065)
* gnutls_privkey_import_tpm_url:         Using keys.         (line   16)
* gnutls_privkey_import_tpm_url <1>:     Abstract key API.   (line 1095)
* gnutls_privkey_import_url:             Abstract private keys.
                                                             (line   19)
* gnutls_privkey_import_url <1>:         Abstract key API.   (line 1126)
* gnutls_privkey_import_x509:            Abstract key API.   (line 1146)
* gnutls_privkey_import_x509_raw:        Managing encrypted keys.
                                                             (line   27)
* gnutls_privkey_import_x509_raw <1>:    Abstract key API.   (line 1172)
* gnutls_privkey_init:                   Abstract key API.   (line 1199)
* gnutls_privkey_set_flags:              Abstract key API.   (line 1222)
* gnutls_privkey_set_pin_function:       Abstract key API.   (line 1238)
* gnutls_privkey_set_spki:               Abstract key API.   (line 1258)
* gnutls_privkey_sign_data:              Operations.         (line   80)
* gnutls_privkey_sign_data <1>:          Abstract key API.   (line 1278)
* gnutls_privkey_sign_data2:             Abstract key API.   (line 1309)
* gnutls_privkey_sign_hash:              Operations.         (line  108)
* gnutls_privkey_sign_hash <1>:          Abstract key API.   (line 1337)
* gnutls_privkey_sign_hash2:             Abstract key API.   (line 1376)
* gnutls_privkey_status:                 Abstract key API.   (line 1415)
* gnutls_privkey_verify_params:          Abstract key API.   (line 1431)
* gnutls_privkey_verify_seed:            Abstract key API.   (line 1444)
* gnutls_protocol_get_id:                Core TLS API.       (line 4536)
* gnutls_protocol_get_name:              Core TLS API.       (line 4548)
* gnutls_protocol_get_version:           Core TLS API.       (line 4560)
* gnutls_protocol_list:                  Core TLS API.       (line 4571)
* gnutls_psk_allocate_client_credentials: Core TLS API.      (line 4583)
* gnutls_psk_allocate_server_credentials: Core TLS API.      (line 4595)
* gnutls_psk_client_get_hint:            Core TLS API.       (line 4607)
* gnutls_psk_free_client_credentials:    Core TLS API.       (line 4623)
* gnutls_psk_free_server_credentials:    Core TLS API.       (line 4632)
* gnutls_psk_server_get_username:        Core TLS API.       (line 4641)
* gnutls_psk_set_client_credentials:     Core TLS API.       (line 4653)
* gnutls_psk_set_client_credentials_function: PSK credentials.
                                                             (line   22)
* gnutls_psk_set_client_credentials_function <1>: Core TLS API.
                                                             (line 4678)
* gnutls_psk_set_params_function:        Core TLS API.       (line 4702)
* gnutls_psk_set_server_credentials_file: PSK credentials.   (line   58)
* gnutls_psk_set_server_credentials_file <1>: Core TLS API.  (line 4716)
* gnutls_psk_set_server_credentials_function: Core TLS API.  (line 4733)
* gnutls_psk_set_server_credentials_hint: Core TLS API.      (line 4758)
* gnutls_psk_set_server_dh_params:       Core TLS API.       (line 4777)
* gnutls_psk_set_server_known_dh_params: Core TLS API.       (line 4791)
* gnutls_psk_set_server_params_function: Core TLS API.       (line 4811)
* gnutls_pubkey_deinit:                  Abstract key API.   (line 1468)
* gnutls_pubkey_encrypt_data:            Operations.         (line   60)
* gnutls_pubkey_encrypt_data <1>:        Abstract key API.   (line 1478)
* gnutls_pubkey_export:                  Abstract key API.   (line 1501)
* gnutls_pubkey_export2:                 Abstract public keys.
                                                             (line   19)
* gnutls_pubkey_export2 <1>:             Abstract key API.   (line 1532)
* gnutls_pubkey_export_dsa_raw:          Abstract key API.   (line 1557)
* gnutls_pubkey_export_dsa_raw2:         Abstract key API.   (line 1584)
* gnutls_pubkey_export_ecc_raw:          Abstract key API.   (line 1613)
* gnutls_pubkey_export_ecc_raw2:         Abstract key API.   (line 1639)
* gnutls_pubkey_export_ecc_x962:         Abstract key API.   (line 1666)
* gnutls_pubkey_export_rsa_raw:          Abstract key API.   (line 1686)
* gnutls_pubkey_export_rsa_raw2:         Abstract key API.   (line 1708)
* gnutls_pubkey_get_key_id:              Abstract key API.   (line 1732)
* gnutls_pubkey_get_key_usage:           Abstract key API.   (line 1761)
* gnutls_pubkey_get_openpgp_key_id:      Abstract key API.   (line 1778)
* gnutls_pubkey_get_pk_algorithm:        Abstract key API.   (line 1801)
* gnutls_pubkey_get_preferred_hash_algorithm: Abstract key API.
                                                             (line 1820)
* gnutls_pubkey_get_spki:                Abstract key API.   (line 1848)
* gnutls_pubkey_import:                  Abstract key API.   (line 1868)
* gnutls_pubkey_import_dsa_raw:          Abstract key API.   (line 1889)
* gnutls_pubkey_import_ecc_raw:          Abstract key API.   (line 1914)
* gnutls_pubkey_import_ecc_x962:         Abstract key API.   (line 1937)
* gnutls_pubkey_import_openpgp:          Abstract key API.   (line 1957)
* gnutls_pubkey_import_openpgp_raw:      Abstract key API.   (line 1974)
* gnutls_pubkey_import_pkcs11:           Abstract key API.   (line 1997)
* gnutls_pubkey_import_privkey:          Abstract key API.   (line 2016)
* gnutls_pubkey_import_rsa_raw:          Abstract key API.   (line 2040)
* gnutls_pubkey_import_tpm_raw:          Abstract key API.   (line 2060)
* gnutls_pubkey_import_tpm_url:          Using keys.         (line   44)
* gnutls_pubkey_import_tpm_url <1>:      Abstract key API.   (line 2087)
* gnutls_pubkey_import_url:              Abstract key API.   (line 2115)
* gnutls_pubkey_import_x509:             Abstract key API.   (line 2133)
* gnutls_pubkey_import_x509_crq:         Abstract key API.   (line 2152)
* gnutls_pubkey_import_x509_raw:         Abstract key API.   (line 2171)
* gnutls_pubkey_init:                    Abstract key API.   (line 2193)
* gnutls_pubkey_print:                   Abstract key API.   (line 2206)
* gnutls_pubkey_set_key_usage:           Abstract key API.   (line 2231)
* gnutls_pubkey_set_pin_function:        Abstract key API.   (line 2249)
* gnutls_pubkey_set_spki:                Abstract key API.   (line 2269)
* gnutls_pubkey_verify_data2:            Operations.         (line    9)
* gnutls_pubkey_verify_data2 <1>:        Abstract key API.   (line 2289)
* gnutls_pubkey_verify_hash2:            Operations.         (line   33)
* gnutls_pubkey_verify_hash2 <1>:        Abstract key API.   (line 2316)
* gnutls_pubkey_verify_params:           Abstract key API.   (line 2346)
* gnutls_random_art:                     Core TLS API.       (line 4825)
* gnutls_range_split:                    Core TLS API.       (line 4852)
* gnutls_record_can_use_length_hiding:   Core TLS API.       (line 4878)
* gnutls_record_check_corked:            Core TLS API.       (line 4896)
* gnutls_record_check_pending:           Data transfer and termination.
                                                             (line  134)
* gnutls_record_check_pending <1>:       Core TLS API.       (line 4910)
* gnutls_record_cork:                    Buffered data transfer.
                                                             (line   12)
* gnutls_record_cork <1>:                Core TLS API.       (line 4923)
* gnutls_record_disable_padding:         Core TLS API.       (line 4937)
* gnutls_record_discard_queued:          Core TLS API.       (line 4952)
* gnutls_record_get_direction:           Asynchronous operation.
                                                             (line   65)
* gnutls_record_get_direction <1>:       Core TLS API.       (line 4967)
* gnutls_record_get_discarded:           Datagram TLS API.   (line  209)
* gnutls_record_get_max_size:            Core TLS API.       (line 4987)
* gnutls_record_get_state:               Core TLS API.       (line 4999)
* gnutls_record_overhead_size:           Core TLS API.       (line 5029)
* gnutls_record_recv:                    Data transfer and termination.
                                                             (line   49)
* gnutls_record_recv <1>:                Core TLS API.       (line 5042)
* gnutls_record_recv_packet:             Core TLS API.       (line 5074)
* gnutls_record_recv_seq:                Data transfer and termination.
                                                             (line  104)
* gnutls_record_recv_seq <1>:            Core TLS API.       (line 5098)
* gnutls_record_send:                    Data transfer and termination.
                                                             (line   12)
* gnutls_record_send <1>:                Core TLS API.       (line 5125)
* gnutls_record_send_range:              Core TLS API.       (line 5165)
* gnutls_record_set_max_size:            Core TLS API.       (line 5194)
* gnutls_record_set_state:               Core TLS API.       (line 5218)
* gnutls_record_set_timeout:             Core TLS API.       (line 5239)
* gnutls_record_uncork:                  Buffered data transfer.
                                                             (line   23)
* gnutls_record_uncork <1>:              Core TLS API.       (line 5258)
* gnutls_register_custom_url:            Application-specific keys.
                                                             (line   69)
* gnutls_register_custom_url <1>:        Abstract key API.   (line 2359)
* gnutls_rehandshake:                    Re-authentication.  (line   60)
* gnutls_rehandshake <1>:                Core TLS API.       (line 5283)
* gnutls_rnd:                            Random number generation.
                                                             (line   21)
* gnutls_rnd <1>:                        Cryptographic API.  (line  825)
* gnutls_rnd_refresh:                    Cryptographic API.  (line  847)
* gnutls_safe_renegotiation_status:      Re-authentication.  (line   38)
* gnutls_safe_renegotiation_status <1>:  Core TLS API.       (line 5314)
* gnutls_sec_param_get_name:             Core TLS API.       (line 5329)
* gnutls_sec_param_to_pk_bits:           Selecting cryptographic key sizes.
                                                             (line   74)
* gnutls_sec_param_to_pk_bits <1>:       Core TLS API.       (line 5343)
* gnutls_sec_param_to_symmetric_bits:    Core TLS API.       (line 5362)
* gnutls_server_name_get:                Core TLS API.       (line 5376)
* gnutls_server_name_set:                Core TLS API.       (line 5415)
* gnutls_session_channel_binding:        Core TLS API.       (line 5445)
* gnutls_session_enable_compatibility_mode: Core TLS API.    (line 5466)
* gnutls_session_etm_status:             Core TLS API.       (line 5486)
* gnutls_session_ext_master_secret_status: Core TLS API.     (line 5499)
* gnutls_session_ext_register:           Core TLS API.       (line 5512)
* gnutls_session_force_valid:            Core TLS API.       (line 5563)
* gnutls_session_get_data:               Core TLS API.       (line 5574)
* gnutls_session_get_data2:              Core TLS API.       (line 5598)
* gnutls_session_get_desc:               Core TLS API.       (line 5622)
* gnutls_session_get_flags:              Core TLS API.       (line 5639)
* gnutls_session_get_id:                 Core TLS API.       (line 5658)
* gnutls_session_get_id2:                Core TLS API.       (line 5682)
* gnutls_session_get_master_secret:      Core TLS API.       (line 5699)
* gnutls_session_get_ptr:                Core TLS API.       (line 5713)
* gnutls_session_get_random:             Core TLS API.       (line 5725)
* gnutls_session_get_verify_cert_status: Core TLS API.       (line 5745)
* gnutls_session_is_resumed:             Session resumption. (line   27)
* gnutls_session_is_resumed <1>:         Core TLS API.       (line 5765)
* gnutls_session_resumption_requested:   Session resumption. (line   91)
* gnutls_session_resumption_requested <1>: Core TLS API.     (line 5776)
* gnutls_session_set_data:               Core TLS API.       (line 5789)
* gnutls_session_set_id:                 Core TLS API.       (line 5812)
* gnutls_session_set_premaster:          Core TLS API.       (line 5833)
* gnutls_session_set_ptr:                Core TLS API.       (line 5868)
* gnutls_session_set_verify_cert:        Certificate credentials.
                                                             (line  255)
* gnutls_session_set_verify_cert <1>:    Core TLS API.       (line 5881)
* gnutls_session_set_verify_cert2:       Core TLS API.       (line 5914)
* gnutls_session_set_verify_function:    Core TLS API.       (line 5946)
* gnutls_session_supplemental_register:  Core TLS API.       (line 5975)
* gnutls_session_ticket_enable_client:   Core TLS API.       (line 6008)
* gnutls_session_ticket_enable_server:   Session resumption. (line   62)
* gnutls_session_ticket_enable_server <1>: Core TLS API.     (line 6023)
* gnutls_session_ticket_key_generate:    Session resumption. (line   78)
* gnutls_session_ticket_key_generate <1>: Core TLS API.      (line 6042)
* gnutls_set_default_priority:           Core TLS API.       (line 6058)
* gnutls_sign_algorithm_get:             Core TLS API.       (line 6081)
* gnutls_sign_algorithm_get_client:      Core TLS API.       (line 6095)
* gnutls_sign_algorithm_get_requested:   Core TLS API.       (line 6110)
* gnutls_sign_get_hash_algorithm:        Core TLS API.       (line 6137)
* gnutls_sign_get_id:                    Core TLS API.       (line 6152)
* gnutls_sign_get_name:                  Core TLS API.       (line 6164)
* gnutls_sign_get_oid:                   Core TLS API.       (line 6176)
* gnutls_sign_get_pk_algorithm:          Core TLS API.       (line 6190)
* gnutls_sign_is_secure:                 Core TLS API.       (line 6208)
* gnutls_sign_is_secure2:                Core TLS API.       (line 6218)
* gnutls_sign_list:                      Core TLS API.       (line 6230)
* gnutls_sign_supports_pk_algorithm:     Core TLS API.       (line 6240)
* gnutls_srp_allocate_client_credentials: Core TLS API.      (line 6257)
* gnutls_srp_allocate_server_credentials: Core TLS API.      (line 6269)
* gnutls_srp_base64_decode:              Core TLS API.       (line 6281)
* gnutls_srp_base64_decode2:             Core TLS API.       (line 6303)
* gnutls_srp_base64_encode:              Core TLS API.       (line 6323)
* gnutls_srp_base64_encode2:             Core TLS API.       (line 6345)
* gnutls_srp_free_client_credentials:    Core TLS API.       (line 6366)
* gnutls_srp_free_server_credentials:    Core TLS API.       (line 6375)
* gnutls_srp_server_get_username:        Core TLS API.       (line 6384)
* gnutls_srp_set_client_credentials:     Core TLS API.       (line 6397)
* gnutls_srp_set_client_credentials_function: SRP credentials.
                                                             (line   19)
* gnutls_srp_set_client_credentials_function <1>: Core TLS API.
                                                             (line 6418)
* gnutls_srp_set_prime_bits:             Core TLS API.       (line 6448)
* gnutls_srp_set_server_credentials_file: SRP credentials.   (line   53)
* gnutls_srp_set_server_credentials_file <1>: Core TLS API.  (line 6469)
* gnutls_srp_set_server_credentials_function: SRP credentials.
                                                             (line   69)
* gnutls_srp_set_server_credentials_function <1>: Core TLS API.
                                                             (line 6488)
* gnutls_srp_set_server_fake_salt_seed:  Core TLS API.       (line 6526)
* gnutls_srp_verifier:                   Authentication using SRP.
                                                             (line   43)
* gnutls_srp_verifier <1>:               Core TLS API.       (line 6563)
* gnutls_srtp_get_keys:                  SRTP.               (line   31)
* gnutls_srtp_get_keys <1>:              Core TLS API.       (line 6592)
* gnutls_srtp_get_mki:                   Core TLS API.       (line 6630)
* gnutls_srtp_get_profile_id:            Core TLS API.       (line 6648)
* gnutls_srtp_get_profile_name:          Core TLS API.       (line 6664)
* gnutls_srtp_get_selected_profile:      Core TLS API.       (line 6679)
* gnutls_srtp_set_mki:                   Core TLS API.       (line 6695)
* gnutls_srtp_set_profile:               Core TLS API.       (line 6712)
* gnutls_srtp_set_profile_direct:        Core TLS API.       (line 6729)
* gnutls_store_commitment:               Certificate verification.
                                                             (line  108)
* gnutls_store_commitment <1>:           Core TLS API.       (line 6750)
* gnutls_store_pubkey:                   Certificate verification.
                                                             (line   61)
* gnutls_store_pubkey <1>:               Core TLS API.       (line 6790)
* gnutls_strerror:                       Core TLS API.       (line 6836)
* gnutls_strerror_name:                  Core TLS API.       (line 6850)
* gnutls_subject_alt_names_deinit:       X509 certificate API.
                                                             (line  124)
* gnutls_subject_alt_names_get:          X509 certificate API.
                                                             (line  135)
* gnutls_subject_alt_names_init:         X509 certificate API.
                                                             (line  164)
* gnutls_subject_alt_names_set:          X509 certificate API.
                                                             (line  178)
* gnutls_supplemental_get_name:          Core TLS API.       (line 6865)
* gnutls_supplemental_recv:              Core TLS API.       (line 6878)
* gnutls_supplemental_register:          Core TLS API.       (line 6893)
* gnutls_supplemental_send:              Core TLS API.       (line 6922)
* gnutls_system_key_add_x509:            Abstract key API.   (line 2385)
* gnutls_system_key_delete:              Abstract key API.   (line 2411)
* gnutls_system_key_iter_deinit:         Abstract key API.   (line 2427)
* gnutls_system_key_iter_get_info:       Application-specific keys.
                                                             (line   20)
* gnutls_system_key_iter_get_info <1>:   Abstract key API.   (line 2438)
* gnutls_system_recv_timeout:            Core TLS API.       (line 6936)
* gnutls_tdb_deinit:                     Core TLS API.       (line 6959)
* gnutls_tdb_init:                       Core TLS API.       (line 6968)
* gnutls_tdb_set_store_commitment_func:  Core TLS API.       (line 6979)
* gnutls_tdb_set_store_func:             Core TLS API.       (line 6999)
* gnutls_tdb_set_verify_func:            Core TLS API.       (line 7018)
* gnutls_tpm_get_registered:             TPM API.            (line   12)
* gnutls_tpm_key_list_deinit:            TPM API.            (line   27)
* gnutls_tpm_key_list_get_url:           TPM API.            (line   38)
* gnutls_tpm_privkey_delete:             Key generation.     (line   52)
* gnutls_tpm_privkey_delete <1>:         Using keys.         (line   82)
* gnutls_tpm_privkey_delete <2>:         TPM API.            (line   60)
* gnutls_tpm_privkey_generate:           Key generation.     (line    9)
* gnutls_tpm_privkey_generate <1>:       TPM API.            (line   76)
* gnutls_transport_get_int:              Core TLS API.       (line 7040)
* gnutls_transport_get_int2:             Core TLS API.       (line 7054)
* gnutls_transport_get_ptr:              Core TLS API.       (line 7071)
* gnutls_transport_get_ptr2:             Core TLS API.       (line 7084)
* gnutls_transport_set_errno:            Setting up the transport layer.
                                                             (line  118)
* gnutls_transport_set_errno <1>:        Core TLS API.       (line 7100)
* gnutls_transport_set_errno_function:   Core TLS API.       (line 7120)
* gnutls_transport_set_fastopen:         Reducing round-trips.
                                                             (line   21)
* gnutls_transport_set_fastopen <1>:     Socket specific API.
                                                             (line   11)
* gnutls_transport_set_int:              Core TLS API.       (line 7138)
* gnutls_transport_set_int2:             Core TLS API.       (line 7156)
* gnutls_transport_set_ptr:              Core TLS API.       (line 7178)
* gnutls_transport_set_ptr2:             Core TLS API.       (line 7191)
* gnutls_transport_set_pull_function:    Setting up the transport layer.
                                                             (line   56)
* gnutls_transport_set_pull_function <1>: Core TLS API.      (line 7208)
* gnutls_transport_set_pull_timeout_function: Setting up the transport layer.
                                                             (line   71)
* gnutls_transport_set_pull_timeout_function <1>: Setting up the transport layer.
                                                             (line  155)
* gnutls_transport_set_pull_timeout_function <2>: Core TLS API.
                                                             (line 7226)
* gnutls_transport_set_push_function:    Setting up the transport layer.
                                                             (line   23)
* gnutls_transport_set_push_function <1>: Core TLS API.      (line 7268)
* gnutls_transport_set_vec_push_function: Setting up the transport layer.
                                                             (line   40)
* gnutls_transport_set_vec_push_function <1>: Core TLS API.  (line 7288)
* gnutls_url_is_supported:               Abstract public keys.
                                                             (line   52)
* gnutls_url_is_supported <1>:           Core TLS API.       (line 7307)
* gnutls_utf8_password_normalize:        Core TLS API.       (line 7321)
* gnutls_verify_stored_pubkey:           Certificate verification.
                                                             (line   18)
* gnutls_verify_stored_pubkey <1>:       Core TLS API.       (line 7346)
* gnutls_x509_aia_deinit:                X509 certificate API.
                                                             (line  205)
* gnutls_x509_aia_get:                   X509 certificate API.
                                                             (line  215)
* gnutls_x509_aia_init:                  X509 certificate API.
                                                             (line  249)
* gnutls_x509_aia_set:                   X509 certificate API.
                                                             (line  262)
* gnutls_x509_aki_deinit:                X509 certificate API.
                                                             (line  289)
* gnutls_x509_aki_get_cert_issuer:       X509 certificate API.
                                                             (line  299)
* gnutls_x509_aki_get_id:                X509 certificate API.
                                                             (line  331)
* gnutls_x509_aki_init:                  X509 certificate API.
                                                             (line  349)
* gnutls_x509_aki_set_cert_issuer:       X509 certificate API.
                                                             (line  362)
* gnutls_x509_aki_set_id:                X509 certificate API.
                                                             (line  394)
* gnutls_x509_cidr_to_rfc5280:           X509 certificate API.
                                                             (line  411)
* gnutls_x509_crl_check_issuer:          X509 certificate API.
                                                             (line  436)
* gnutls_x509_crl_deinit:                X509 certificate API.
                                                             (line  451)
* gnutls_x509_crl_dist_points_deinit:    X509 certificate API.
                                                             (line  459)
* gnutls_x509_crl_dist_points_get:       X509 certificate API.
                                                             (line  470)
* gnutls_x509_crl_dist_points_init:      X509 certificate API.
                                                             (line  496)
* gnutls_x509_crl_dist_points_set:       X509 certificate API.
                                                             (line  510)
* gnutls_x509_crl_export:                X509 certificate API.
                                                             (line  534)
* gnutls_x509_crl_export2:               X509 certificate API.
                                                             (line  560)
* gnutls_x509_crl_get_authority_key_gn_serial: X509 certificate API.
                                                             (line  583)
* gnutls_x509_crl_get_authority_key_id:  X509 certificate API.
                                                             (line  620)
* gnutls_x509_crl_get_crt_count:         X509 certificate API.
                                                             (line  648)
* gnutls_x509_crl_get_crt_serial:        PKIX certificate revocation lists.
                                                             (line   55)
* gnutls_x509_crl_get_crt_serial <1>:    X509 certificate API.
                                                             (line  660)
* gnutls_x509_crl_get_dn_oid:            X509 certificate API.
                                                             (line  686)
* gnutls_x509_crl_get_extension_data:    X509 certificate API.
                                                             (line  709)
* gnutls_x509_crl_get_extension_data2:   X509 certificate API.
                                                             (line  739)
* gnutls_x509_crl_get_extension_info:    X509 certificate API.
                                                             (line  762)
* gnutls_x509_crl_get_extension_oid:     X509 certificate API.
                                                             (line  796)
* gnutls_x509_crl_get_issuer_dn:         X509 certificate API.
                                                             (line  821)
* gnutls_x509_crl_get_issuer_dn2:        X509 certificate API.
                                                             (line  846)
* gnutls_x509_crl_get_issuer_dn3:        X509 certificate API.
                                                             (line  868)
* gnutls_x509_crl_get_issuer_dn_by_oid:  X509 certificate API.
                                                             (line  893)
* gnutls_x509_crl_get_next_update:       X509 certificate API.
                                                             (line  929)
* gnutls_x509_crl_get_number:            X509 certificate API.
                                                             (line  943)
* gnutls_x509_crl_get_raw_issuer_dn:     X509 certificate API.
                                                             (line  965)
* gnutls_x509_crl_get_signature:         X509 certificate API.
                                                             (line  981)
* gnutls_x509_crl_get_signature_algorithm: X509 certificate API.
                                                             (line  998)
* gnutls_x509_crl_get_signature_oid:     X509 certificate API.
                                                             (line 1014)
* gnutls_x509_crl_get_this_update:       X509 certificate API.
                                                             (line 1034)
* gnutls_x509_crl_get_version:           X509 certificate API.
                                                             (line 1045)
* gnutls_x509_crl_import:                X509 certificate API.
                                                             (line 1055)
* gnutls_x509_crl_init:                  X509 certificate API.
                                                             (line 1075)
* gnutls_x509_crl_iter_crt_serial:       X509 certificate API.
                                                             (line 1090)
* gnutls_x509_crl_iter_deinit:           X509 certificate API.
                                                             (line 1123)
* gnutls_x509_crl_list_import:           X509 certificate API.
                                                             (line 1132)
* gnutls_x509_crl_list_import2:          X509 certificate API.
                                                             (line 1163)
* gnutls_x509_crl_print:                 X509 certificate API.
                                                             (line 1192)
* gnutls_x509_crl_privkey_sign:          PKIX certificate revocation lists.
                                                             (line  128)
* gnutls_x509_crl_privkey_sign <1>:      Abstract key API.   (line 2476)
* gnutls_x509_crl_set_authority_key_id:  X509 certificate API.
                                                             (line 1212)
* gnutls_x509_crl_set_crt:               X509 certificate API.
                                                             (line 1233)
* gnutls_x509_crl_set_crt_serial:        X509 certificate API.
                                                             (line 1251)
* gnutls_x509_crl_set_next_update:       X509 certificate API.
                                                             (line 1271)
* gnutls_x509_crl_set_number:            X509 certificate API.
                                                             (line 1290)
* gnutls_x509_crl_set_this_update:       X509 certificate API.
                                                             (line 1310)
* gnutls_x509_crl_set_version:           X509 certificate API.
                                                             (line 1324)
* gnutls_x509_crl_sign:                  Compatibility API.  (line  127)
* gnutls_x509_crl_sign2:                 PKIX certificate revocation lists.
                                                             (line  101)
* gnutls_x509_crl_sign2 <1>:             X509 certificate API.
                                                             (line 1340)
* gnutls_x509_crl_verify:                X509 certificate API.
                                                             (line 1370)
* gnutls_x509_crq_deinit:                X509 certificate API.
                                                             (line 1403)
* gnutls_x509_crq_export:                X509 certificate API.
                                                             (line 1412)
* gnutls_x509_crq_export2:               X509 certificate API.
                                                             (line 1440)
* gnutls_x509_crq_get_attribute_by_oid:  X509 certificate API.
                                                             (line 1464)
* gnutls_x509_crq_get_attribute_data:    X509 certificate API.
                                                             (line 1493)
* gnutls_x509_crq_get_attribute_info:    X509 certificate API.
                                                             (line 1522)
* gnutls_x509_crq_get_basic_constraints: X509 certificate API.
                                                             (line 1553)
* gnutls_x509_crq_get_challenge_password: X509 certificate API.
                                                             (line 1583)
* gnutls_x509_crq_get_dn:                X509 certificate API.
                                                             (line 1601)
* gnutls_x509_crq_get_dn2:               X509 certificate API.
                                                             (line 1625)
* gnutls_x509_crq_get_dn3:               X509 certificate API.
                                                             (line 1648)
* gnutls_x509_crq_get_dn_by_oid:         X509 certificate API.
                                                             (line 1674)
* gnutls_x509_crq_get_dn_oid:            X509 certificate API.
                                                             (line 1708)
* gnutls_x509_crq_get_extension_by_oid:  X509 certificate API.
                                                             (line 1728)
* gnutls_x509_crq_get_extension_by_oid2: X509 certificate API.
                                                             (line 1758)
* gnutls_x509_crq_get_extension_data:    X509 certificate API.
                                                             (line 1786)
* gnutls_x509_crq_get_extension_data2:   X509 certificate API.
                                                             (line 1816)
* gnutls_x509_crq_get_extension_info:    X509 certificate API.
                                                             (line 1841)
* gnutls_x509_crq_get_key_id:            X509 certificate API.
                                                             (line 1875)
* gnutls_x509_crq_get_key_purpose_oid:   X509 certificate API.
                                                             (line 1904)
* gnutls_x509_crq_get_key_rsa_raw:       X509 certificate API.
                                                             (line 1932)
* gnutls_x509_crq_get_key_usage:         X509 certificate API.
                                                             (line 1952)
* gnutls_x509_crq_get_pk_algorithm:      X509 certificate API.
                                                             (line 1978)
* gnutls_x509_crq_get_pk_oid:            X509 certificate API.
                                                             (line 1998)
* gnutls_x509_crq_get_private_key_usage_period: X509 certificate API.
                                                             (line 2017)
* gnutls_x509_crq_get_signature_algorithm: X509 certificate API.
                                                             (line 2038)
* gnutls_x509_crq_get_signature_oid:     X509 certificate API.
                                                             (line 2057)
* gnutls_x509_crq_get_spki:              X509 certificate API.
                                                             (line 2077)
* gnutls_x509_crq_get_subject_alt_name:  X509 certificate API.
                                                             (line 2093)
* gnutls_x509_crq_get_subject_alt_othername_oid: X509 certificate API.
                                                             (line 2130)
* gnutls_x509_crq_get_tlsfeatures:       X509 certificate API.
                                                             (line 2166)
* gnutls_x509_crq_get_version:           X509 certificate API.
                                                             (line 2198)
* gnutls_x509_crq_import:                X509 certificate API.
                                                             (line 2210)
* gnutls_x509_crq_init:                  X509 certificate API.
                                                             (line 2231)
* gnutls_x509_crq_print:                 X509 certificate API.
                                                             (line 2243)
* gnutls_x509_crq_privkey_sign:          Abstract key API.   (line 2508)
* gnutls_x509_crq_set_attribute_by_oid:  X509 certificate API.
                                                             (line 2265)
* gnutls_x509_crq_set_basic_constraints: X509 certificate API.
                                                             (line 2290)
* gnutls_x509_crq_set_challenge_password: X509 certificate API.
                                                             (line 2312)
* gnutls_x509_crq_set_dn:                X509 certificate API.
                                                             (line 2327)
* gnutls_x509_crq_set_dn_by_oid:         X509 certificate API.
                                                             (line 2345)
* gnutls_x509_crq_set_extension_by_oid:  X509 certificate API.
                                                             (line 2374)
* gnutls_x509_crq_set_key:               PKCS 10 certificate requests.
                                                             (line   30)
* gnutls_x509_crq_set_key <1>:           X509 certificate API.
                                                             (line 2398)
* gnutls_x509_crq_set_key_purpose_oid:   X509 certificate API.
                                                             (line 2413)
* gnutls_x509_crq_set_key_rsa_raw:       X509 certificate API.
                                                             (line 2435)
* gnutls_x509_crq_set_key_usage:         X509 certificate API.
                                                             (line 2454)
* gnutls_x509_crq_set_private_key_usage_period: X509 certificate API.
                                                             (line 2470)
* gnutls_x509_crq_set_pubkey:            Operations.         (line  168)
* gnutls_x509_crq_set_pubkey <1>:        Abstract key API.   (line 2537)
* gnutls_x509_crq_set_spki:              X509 certificate API.
                                                             (line 2487)
* gnutls_x509_crq_set_subject_alt_name:  X509 certificate API.
                                                             (line 2511)
* gnutls_x509_crq_set_subject_alt_othername: X509 certificate API.
                                                             (line 2536)
* gnutls_x509_crq_set_tlsfeatures:       X509 certificate API.
                                                             (line 2564)
* gnutls_x509_crq_set_version:           X509 certificate API.
                                                             (line 2582)
* gnutls_x509_crq_sign:                  Compatibility API.  (line  146)
* gnutls_x509_crq_sign2:                 PKCS 10 certificate requests.
                                                             (line   42)
* gnutls_x509_crq_sign2 <1>:             X509 certificate API.
                                                             (line 2597)
* gnutls_x509_crq_verify:                X509 certificate API.
                                                             (line 2624)
* gnutls_x509_crt_check_email:           X509 certificate API.
                                                             (line 2643)
* gnutls_x509_crt_check_hostname:        X509 certificate API.
                                                             (line 2660)
* gnutls_x509_crt_check_hostname2:       X509 certificate API.
                                                             (line 2678)
* gnutls_x509_crt_check_ip:              X509 certificate API.
                                                             (line 2719)
* gnutls_x509_crt_check_issuer:          X509 certificate API.
                                                             (line 2739)
* gnutls_x509_crt_check_key_purpose:     X509 certificate API.
                                                             (line 2758)
* gnutls_x509_crt_check_revocation:      X509 certificate API.
                                                             (line 2779)
* gnutls_x509_crt_cpy_crl_dist_points:   X509 certificate API.
                                                             (line 2797)
* gnutls_x509_crt_deinit:                X509 certificate API.
                                                             (line 2813)
* gnutls_x509_crt_equals:                X509 certificate API.
                                                             (line 2821)
* gnutls_x509_crt_equals2:               X509 certificate API.
                                                             (line 2836)
* gnutls_x509_crt_export:                X509 certificate API.
                                                             (line 2852)
* gnutls_x509_crt_export2:               X509 certificate API.
                                                             (line 2879)
* gnutls_x509_crt_get_activation_time:   X509 certificate API.
                                                             (line 2901)
* gnutls_x509_crt_get_authority_info_access: X509 certificate API.
                                                             (line 2913)
* gnutls_x509_crt_get_authority_key_gn_serial: X509 certificate API.
                                                             (line 2991)
* gnutls_x509_crt_get_authority_key_id:  X509 certificate API.
                                                             (line 3030)
* gnutls_x509_crt_get_basic_constraints: X509 certificate API.
                                                             (line 3057)
* gnutls_x509_crt_get_ca_status:         X509 certificate API.
                                                             (line 3085)
* gnutls_x509_crt_get_crl_dist_points:   X509 certificate API.
                                                             (line 3108)
* gnutls_x509_crt_get_dn:                X509 certificate API.
                                                             (line 3141)
* gnutls_x509_crt_get_dn2:               X.509 distinguished names.
                                                             (line   14)
* gnutls_x509_crt_get_dn2 <1>:           X509 certificate API.
                                                             (line 3168)
* gnutls_x509_crt_get_dn3:               X509 certificate API.
                                                             (line 3190)
* gnutls_x509_crt_get_dn_by_oid:         X509 certificate API.
                                                             (line 3215)
* gnutls_x509_crt_get_dn_oid:            X509 certificate API.
                                                             (line 3254)
* gnutls_x509_crt_get_expiration_time:   X509 certificate API.
                                                             (line 3280)
* gnutls_x509_crt_get_extension_by_oid:  X509 certificate API.
                                                             (line 3295)
* gnutls_x509_crt_get_extension_by_oid2: X509 certificate API.
                                                             (line 3323)
* gnutls_x509_crt_get_extension_data:    X509 certificate API.
                                                             (line 3351)
* gnutls_x509_crt_get_extension_data2:   X509 certificate API.
                                                             (line 3379)
* gnutls_x509_crt_get_extension_info:    X509 certificate API.
                                                             (line 3402)
* gnutls_x509_crt_get_extension_oid:     X509 certificate API.
                                                             (line 3436)
* gnutls_x509_crt_get_fingerprint:       X509 certificate API.
                                                             (line 3462)
* gnutls_x509_crt_get_inhibit_anypolicy: X509 certificate API.
                                                             (line 3486)
* gnutls_x509_crt_get_issuer:            X509 certificate API.
                                                             (line 3513)
* gnutls_x509_crt_get_issuer_alt_name:   X509 certificate API.
                                                             (line 3531)
* gnutls_x509_crt_get_issuer_alt_name2:  X509 certificate API.
                                                             (line 3574)
* gnutls_x509_crt_get_issuer_alt_othername_oid: X509 certificate API.
                                                             (line 3612)
* gnutls_x509_crt_get_issuer_dn:         X509 certificate API.
                                                             (line 3652)
* gnutls_x509_crt_get_issuer_dn2:        X509 certificate API.
                                                             (line 3679)
* gnutls_x509_crt_get_issuer_dn3:        X509 certificate API.
                                                             (line 3701)
* gnutls_x509_crt_get_issuer_dn_by_oid:  X509 certificate API.
                                                             (line 3726)
* gnutls_x509_crt_get_issuer_dn_oid:     X509 certificate API.
                                                             (line 3765)
* gnutls_x509_crt_get_issuer_unique_id:  X509 certificate API.
                                                             (line 3791)
* gnutls_x509_crt_get_key_id:            X.509 public and private keys.
                                                             (line   13)
* gnutls_x509_crt_get_key_id <1>:        X509 certificate API.
                                                             (line 3820)
* gnutls_x509_crt_get_key_purpose_oid:   X509 certificate API.
                                                             (line 3847)
* gnutls_x509_crt_get_key_usage:         X509 certificate API.
                                                             (line 3877)
* gnutls_x509_crt_get_name_constraints:  X509 certificate API.
                                                             (line 3900)
* gnutls_x509_crt_get_pk_algorithm:      X509 certificate API.
                                                             (line 3935)
* gnutls_x509_crt_get_pk_dsa_raw:        X509 certificate API.
                                                             (line 3957)
* gnutls_x509_crt_get_pk_ecc_raw:        X509 certificate API.
                                                             (line 3980)
* gnutls_x509_crt_get_pk_oid:            X509 certificate API.
                                                             (line 4003)
* gnutls_x509_crt_get_pk_rsa_raw:        X509 certificate API.
                                                             (line 4022)
* gnutls_x509_crt_get_policy:            X509 certificate API.
                                                             (line 4040)
* gnutls_x509_crt_get_preferred_hash_algorithm: Compatibility API.
                                                             (line  163)
* gnutls_x509_crt_get_private_key_usage_period: X509 certificate API.
                                                             (line 4067)
* gnutls_x509_crt_get_proxy:             X509 certificate API.
                                                             (line 4089)
* gnutls_x509_crt_get_raw_dn:            X509 certificate API.
                                                             (line 4116)
* gnutls_x509_crt_get_raw_issuer_dn:     X509 certificate API.
                                                             (line 4133)
* gnutls_x509_crt_get_serial:            X509 certificate API.
                                                             (line 4149)
* gnutls_x509_crt_get_signature:         X509 certificate API.
                                                             (line 4169)
* gnutls_x509_crt_get_signature_algorithm: X509 certificate API.
                                                             (line 4186)
* gnutls_x509_crt_get_signature_oid:     X509 certificate API.
                                                             (line 4203)
* gnutls_x509_crt_get_spki:              X509 certificate API.
                                                             (line 4223)
* gnutls_x509_crt_get_subject:           X509 certificate API.
                                                             (line 4239)
* gnutls_x509_crt_get_subject_alt_name:  X509 certificate API.
                                                             (line 4257)
* gnutls_x509_crt_get_subject_alt_name2: X509 certificate API.
                                                             (line 4297)
* gnutls_x509_crt_get_subject_alt_othername_oid: X509 certificate API.
                                                             (line 4333)
* gnutls_x509_crt_get_subject_key_id:    X509 certificate API.
                                                             (line 4371)
* gnutls_x509_crt_get_subject_unique_id: X509 certificate API.
                                                             (line 4393)
* gnutls_x509_crt_get_tlsfeatures:       X509 certificate API.
                                                             (line 4420)
* gnutls_x509_crt_get_version:           X509 certificate API.
                                                             (line 4452)
* gnutls_x509_crt_import:                X509 certificate API.
                                                             (line 4463)
* gnutls_x509_crt_import_pkcs11:         PKCS 11 API.        (line 1292)
* gnutls_x509_crt_import_url:            X509 certificate API.
                                                             (line 4484)
* gnutls_x509_crt_init:                  X509 certificate API.
                                                             (line 4508)
* gnutls_x509_crt_list_import:           X509 certificate API.
                                                             (line 4519)
* gnutls_x509_crt_list_import2:          X509 certificate API.
                                                             (line 4555)
* gnutls_x509_crt_list_import_pkcs11:    PKCS 11 API.        (line 1309)
* gnutls_x509_crt_list_verify:           X509 certificate API.
                                                             (line 4587)
* gnutls_x509_crt_print:                 X509 certificate API.
                                                             (line 4627)
* gnutls_x509_crt_privkey_sign:          Abstract key API.   (line 2554)
* gnutls_x509_crt_set_activation_time:   X509 certificate API.
                                                             (line 4652)
* gnutls_x509_crt_set_authority_info_access: X509 certificate API.
                                                             (line 4667)
* gnutls_x509_crt_set_authority_key_id:  X509 certificate API.
                                                             (line 4693)
* gnutls_x509_crt_set_basic_constraints: X509 certificate API.
                                                             (line 4711)
* gnutls_x509_crt_set_ca_status:         X509 certificate API.
                                                             (line 4731)
* gnutls_x509_crt_set_crl_dist_points:   X509 certificate API.
                                                             (line 4748)
* gnutls_x509_crt_set_crl_dist_points2:  X509 certificate API.
                                                             (line 4768)
* gnutls_x509_crt_set_crq:               X509 certificate API.
                                                             (line 4793)
* gnutls_x509_crt_set_crq_extensions:    X509 certificate API.
                                                             (line 4835)
* gnutls_x509_crt_set_crq_extension_by_oid: X509 certificate API.
                                                             (line 4813)
* gnutls_x509_crt_set_dn:                X509 certificate API.
                                                             (line 4852)
* gnutls_x509_crt_set_dn_by_oid:         X509 certificate API.
                                                             (line 4875)
* gnutls_x509_crt_set_expiration_time:   X509 certificate API.
                                                             (line 4904)
* gnutls_x509_crt_set_extension_by_oid:  X509 certificate API.
                                                             (line 4921)
* gnutls_x509_crt_set_flags:             X509 certificate API.
                                                             (line 4945)
* gnutls_x509_crt_set_inhibit_anypolicy: X509 certificate API.
                                                             (line 4961)
* gnutls_x509_crt_set_issuer_alt_name:   X509 certificate API.
                                                             (line 4976)
* gnutls_x509_crt_set_issuer_alt_othername: X509 certificate API.
                                                             (line 5006)
* gnutls_x509_crt_set_issuer_dn:         X509 certificate API.
                                                             (line 5037)
* gnutls_x509_crt_set_issuer_dn_by_oid:  X509 certificate API.
                                                             (line 5055)
* gnutls_x509_crt_set_issuer_unique_id:  X509 certificate API.
                                                             (line 5088)
* gnutls_x509_crt_set_key:               X509 certificate API.
                                                             (line 5107)
* gnutls_x509_crt_set_key_purpose_oid:   X509 certificate API.
                                                             (line 5125)
* gnutls_x509_crt_set_key_usage:         X509 certificate API.
                                                             (line 5145)
* gnutls_x509_crt_set_name_constraints:  X509 certificate API.
                                                             (line 5159)
* gnutls_x509_crt_set_pin_function:      X509 certificate API.
                                                             (line 5180)
* gnutls_x509_crt_set_policy:            X509 certificate API.
                                                             (line 5200)
* gnutls_x509_crt_set_private_key_usage_period: X509 certificate API.
                                                             (line 5224)
* gnutls_x509_crt_set_proxy:             X509 certificate API.
                                                             (line 5241)
* gnutls_x509_crt_set_proxy_dn:          X509 certificate API.
                                                             (line 5264)
* gnutls_x509_crt_set_pubkey:            Operations.         (line  182)
* gnutls_x509_crt_set_pubkey <1>:        Abstract key API.   (line 2584)
* gnutls_x509_crt_set_serial:            X509 certificate API.
                                                             (line 5290)
* gnutls_x509_crt_set_spki:              X509 certificate API.
                                                             (line 5317)
* gnutls_x509_crt_set_subject_alternative_name: X509 certificate API.
                                                             (line 5405)
* gnutls_x509_crt_set_subject_alt_name:  X509 certificate API.
                                                             (line 5341)
* gnutls_x509_crt_set_subject_alt_othername: X509 certificate API.
                                                             (line 5374)
* gnutls_x509_crt_set_subject_key_id:    X509 certificate API.
                                                             (line 5429)
* gnutls_x509_crt_set_subject_unique_id: X509 certificate API.
                                                             (line 5446)
* gnutls_x509_crt_set_tlsfeatures:       X509 certificate API.
                                                             (line 5465)
* gnutls_x509_crt_set_version:           X509 certificate API.
                                                             (line 5483)
* gnutls_x509_crt_sign:                  X509 certificate API.
                                                             (line 5505)
* gnutls_x509_crt_sign2:                 X509 certificate API.
                                                             (line 5522)
* gnutls_x509_crt_verify:                X509 certificate API.
                                                             (line 5552)
* gnutls_x509_crt_verify_data2:          X509 certificate API.
                                                             (line 5579)
* gnutls_x509_dn_deinit:                 X509 certificate API.
                                                             (line 5609)
* gnutls_x509_dn_export:                 X509 certificate API.
                                                             (line 5620)
* gnutls_x509_dn_export2:                X509 certificate API.
                                                             (line 5647)
* gnutls_x509_dn_get_rdn_ava:            X.509 distinguished names.
                                                             (line   52)
* gnutls_x509_dn_get_rdn_ava <1>:        X509 certificate API.
                                                             (line 5670)
* gnutls_x509_dn_get_str:                X509 certificate API.
                                                             (line 5701)
* gnutls_x509_dn_get_str2:               X509 certificate API.
                                                             (line 5720)
* gnutls_x509_dn_import:                 X509 certificate API.
                                                             (line 5745)
* gnutls_x509_dn_init:                   X509 certificate API.
                                                             (line 5764)
* gnutls_x509_dn_oid_known:              X509 certificate API.
                                                             (line 5780)
* gnutls_x509_dn_oid_name:               X509 certificate API.
                                                             (line 5796)
* gnutls_x509_dn_set_str:                X509 certificate API.
                                                             (line 5813)
* gnutls_x509_ext_deinit:                X509 certificate API.
                                                             (line 5833)
* gnutls_x509_ext_export_aia:            X509 certificate API.
                                                             (line 5843)
* gnutls_x509_ext_export_authority_key_id: X509 certificate API.
                                                             (line 5862)
* gnutls_x509_ext_export_basic_constraints: X509 certificate API.
                                                             (line 5881)
* gnutls_x509_ext_export_crl_dist_points: X509 certificate API.
                                                             (line 5902)
* gnutls_x509_ext_export_inhibit_anypolicy: X509 certificate API.
                                                             (line 5922)
* gnutls_x509_ext_export_key_purposes:   X509 certificate API.
                                                             (line 5942)
* gnutls_x509_ext_export_key_usage:      X509 certificate API.
                                                             (line 5961)
* gnutls_x509_ext_export_name_constraints: X509 certificate API.
                                                             (line 5980)
* gnutls_x509_ext_export_policies:       X509 certificate API.
                                                             (line 5999)
* gnutls_x509_ext_export_private_key_usage_period: X509 certificate API.
                                                             (line 6019)
* gnutls_x509_ext_export_proxy:          X509 certificate API.
                                                             (line 6040)
* gnutls_x509_ext_export_subject_alt_names: X509 certificate API.
                                                             (line 6069)
* gnutls_x509_ext_export_subject_key_id: X509 certificate API.
                                                             (line 6088)
* gnutls_x509_ext_export_tlsfeatures:    X509 certificate API.
                                                             (line 6107)
* gnutls_x509_ext_import_aia:            X509 certificate API.
                                                             (line 6126)
* gnutls_x509_ext_import_authority_key_id: X509 certificate API.
                                                             (line 6147)
* gnutls_x509_ext_import_basic_constraints: X509 certificate API.
                                                             (line 6168)
* gnutls_x509_ext_import_crl_dist_points: X509 certificate API.
                                                             (line 6187)
* gnutls_x509_ext_import_inhibit_anypolicy: X509 certificate API.
                                                             (line 6207)
* gnutls_x509_ext_import_key_purposes:   X509 certificate API.
                                                             (line 6231)
* gnutls_x509_ext_import_key_usage:      X509 certificate API.
                                                             (line 6252)
* gnutls_x509_ext_import_name_constraints: X509 certificate API.
                                                             (line 6276)
* gnutls_x509_ext_import_policies:       X509 certificate API.
                                                             (line 6309)
* gnutls_x509_ext_import_private_key_usage_period: X509 certificate API.
                                                             (line 6328)
* gnutls_x509_ext_import_proxy:          X509 certificate API.
                                                             (line 6348)
* gnutls_x509_ext_import_subject_alt_names: X509 certificate API.
                                                             (line 6377)
* gnutls_x509_ext_import_subject_key_id: X509 certificate API.
                                                             (line 6401)
* gnutls_x509_ext_import_tlsfeatures:    X509 certificate API.
                                                             (line 6420)
* gnutls_x509_ext_print:                 X509 certificate API.
                                                             (line 6446)
* gnutls_x509_key_purpose_deinit:        X509 certificate API.
                                                             (line 6468)
* gnutls_x509_key_purpose_get:           X509 certificate API.
                                                             (line 6479)
* gnutls_x509_key_purpose_init:          X509 certificate API.
                                                             (line 6502)
* gnutls_x509_key_purpose_set:           X509 certificate API.
                                                             (line 6516)
* gnutls_x509_name_constraints_add_excluded: X509 certificate API.
                                                             (line 6532)
* gnutls_x509_name_constraints_add_permitted: X509 certificate API.
                                                             (line 6558)
* gnutls_x509_name_constraints_check:    X509 certificate API.
                                                             (line 6583)
* gnutls_x509_name_constraints_check_crt: X509 certificate API.
                                                             (line 6608)
* gnutls_x509_name_constraints_deinit:   X509 certificate API.
                                                             (line 6633)
* gnutls_x509_name_constraints_get_excluded: X509 certificate API.
                                                             (line 6644)
* gnutls_x509_name_constraints_get_permitted: X509 certificate API.
                                                             (line 6674)
* gnutls_x509_name_constraints_init:     X509 certificate API.
                                                             (line 6704)
* gnutls_x509_othername_to_virtual:      X509 certificate API.
                                                             (line 6718)
* gnutls_x509_policies_deinit:           X509 certificate API.
                                                             (line 6740)
* gnutls_x509_policies_get:              X509 certificate API.
                                                             (line 6751)
* gnutls_x509_policies_init:             X509 certificate API.
                                                             (line 6776)
* gnutls_x509_policies_set:              X509 certificate API.
                                                             (line 6790)
* gnutls_x509_policy_release:            X509 certificate API.
                                                             (line 6807)
* gnutls_x509_privkey_cpy:               X509 certificate API.
                                                             (line 6820)
* gnutls_x509_privkey_deinit:            X509 certificate API.
                                                             (line 6835)
* gnutls_x509_privkey_export:            X509 certificate API.
                                                             (line 6844)
* gnutls_x509_privkey_export2:           X509 certificate API.
                                                             (line 6873)
* gnutls_x509_privkey_export2_pkcs8:     X509 certificate API.
                                                             (line 6898)
* gnutls_x509_privkey_export_dsa_raw:    X509 certificate API.
                                                             (line 6934)
* gnutls_x509_privkey_export_ecc_raw:    X509 certificate API.
                                                             (line 6960)
* gnutls_x509_privkey_export_pkcs8:      X509 certificate API.
                                                             (line 6986)
* gnutls_x509_privkey_export_rsa_raw:    X509 certificate API.
                                                             (line 7025)
* gnutls_x509_privkey_export_rsa_raw2:   X509 certificate API.
                                                             (line 7053)
* gnutls_x509_privkey_fix:               X509 certificate API.
                                                             (line 7088)
* gnutls_x509_privkey_generate:          X509 certificate API.
                                                             (line 7100)
* gnutls_x509_privkey_generate2:         X509 certificate API.
                                                             (line 7134)
* gnutls_x509_privkey_get_key_id:        X509 certificate API.
                                                             (line 7176)
* gnutls_x509_privkey_get_pk_algorithm:  X509 certificate API.
                                                             (line 7203)
* gnutls_x509_privkey_get_pk_algorithm2: X509 certificate API.
                                                             (line 7216)
* gnutls_x509_privkey_get_seed:          X509 certificate API.
                                                             (line 7231)
* gnutls_x509_privkey_get_spki:          X509 certificate API.
                                                             (line 7256)
* gnutls_x509_privkey_import:            X509 certificate API.
                                                             (line 7272)
* gnutls_x509_privkey_import2:           Managing encrypted keys.
                                                             (line   51)
* gnutls_x509_privkey_import2 <1>:       X509 certificate API.
                                                             (line 7294)
* gnutls_x509_privkey_import_dsa_raw:    X509 certificate API.
                                                             (line 7324)
* gnutls_x509_privkey_import_ecc_raw:    X509 certificate API.
                                                             (line 7350)
* gnutls_x509_privkey_import_openssl:    Managing encrypted keys.
                                                             (line  237)
* gnutls_x509_privkey_import_openssl <1>: X509 certificate API.
                                                             (line 7377)
* gnutls_x509_privkey_import_pkcs8:      X509 certificate API.
                                                             (line 7401)
* gnutls_x509_privkey_import_rsa_raw:    X509 certificate API.
                                                             (line 7438)
* gnutls_x509_privkey_import_rsa_raw2:   X509 certificate API.
                                                             (line 7467)
* gnutls_x509_privkey_init:              X509 certificate API.
                                                             (line 7501)
* gnutls_x509_privkey_sec_param:         X509 certificate API.
                                                             (line 7512)
* gnutls_x509_privkey_set_flags:         X509 certificate API.
                                                             (line 7527)
* gnutls_x509_privkey_set_pin_function:  X509 certificate API.
                                                             (line 7543)
* gnutls_x509_privkey_set_spki:          X509 certificate API.
                                                             (line 7563)
* gnutls_x509_privkey_sign_data:         X509 certificate API.
                                                             (line 7579)
* gnutls_x509_privkey_sign_hash:         Compatibility API.  (line  190)
* gnutls_x509_privkey_verify_params:     X509 certificate API.
                                                             (line 7614)
* gnutls_x509_privkey_verify_seed:       X509 certificate API.
                                                             (line 7626)
* gnutls_x509_rdn_get:                   X509 certificate API.
                                                             (line 7651)
* gnutls_x509_rdn_get2:                  X509 certificate API.
                                                             (line 7674)
* gnutls_x509_rdn_get_by_oid:            X509 certificate API.
                                                             (line 7698)
* gnutls_x509_rdn_get_oid:               X509 certificate API.
                                                             (line 7726)
* gnutls_x509_spki_deinit:               X509 certificate API.
                                                             (line 7749)
* gnutls_x509_spki_get_rsa_pss_params:   X509 certificate API.
                                                             (line 7759)
* gnutls_x509_spki_init:                 X509 certificate API.
                                                             (line 7779)
* gnutls_x509_spki_set_rsa_pss_params:   X509 certificate API.
                                                             (line 7794)
* gnutls_x509_tlsfeatures_add:           X509 certificate API.
                                                             (line 7811)
* gnutls_x509_tlsfeatures_check_crt:     X509 certificate API.
                                                             (line 7828)
* gnutls_x509_tlsfeatures_deinit:        X509 certificate API.
                                                             (line 7847)
* gnutls_x509_tlsfeatures_get:           X509 certificate API.
                                                             (line 7859)
* gnutls_x509_tlsfeatures_init:          X509 certificate API.
                                                             (line 7879)
* gnutls_x509_trust_list_add_cas:        Verifying X.509 certificate paths.
                                                             (line    9)
* gnutls_x509_trust_list_add_cas <1>:    X509 certificate API.
                                                             (line 7894)
* gnutls_x509_trust_list_add_crls:       Verifying X.509 certificate paths.
                                                             (line   64)
* gnutls_x509_trust_list_add_crls <1>:   X509 certificate API.
                                                             (line 7920)
* gnutls_x509_trust_list_add_named_crt:  Verifying X.509 certificate paths.
                                                             (line   32)
* gnutls_x509_trust_list_add_named_crt <1>: X509 certificate API.
                                                             (line 7956)
* gnutls_x509_trust_list_add_system_trust: Verifying X.509 certificate paths.
                                                             (line  277)
* gnutls_x509_trust_list_add_system_trust <1>: X509 certificate API.
                                                             (line 7991)
* gnutls_x509_trust_list_add_trust_dir:  X509 certificate API.
                                                             (line 8015)
* gnutls_x509_trust_list_add_trust_file: Verifying X.509 certificate paths.
                                                             (line  225)
* gnutls_x509_trust_list_add_trust_file <1>: X509 certificate API.
                                                             (line 8042)
* gnutls_x509_trust_list_add_trust_mem:  Verifying X.509 certificate paths.
                                                             (line  253)
* gnutls_x509_trust_list_add_trust_mem <1>: X509 certificate API.
                                                             (line 8073)
* gnutls_x509_trust_list_deinit:         X509 certificate API.
                                                             (line 8100)
* gnutls_x509_trust_list_get_issuer:     X509 certificate API.
                                                             (line 8117)
* gnutls_x509_trust_list_get_issuer_by_dn: X509 certificate API.
                                                             (line 8147)
* gnutls_x509_trust_list_get_issuer_by_subject_key_id: X509 certificate API.
                                                             (line 8171)
* gnutls_x509_trust_list_init:           X509 certificate API.
                                                             (line 8198)
* gnutls_x509_trust_list_iter_deinit:    X509 certificate API.
                                                             (line 8215)
* gnutls_x509_trust_list_iter_get_ca:    X509 certificate API.
                                                             (line 8226)
* gnutls_x509_trust_list_remove_cas:     X509 certificate API.
                                                             (line 8255)
* gnutls_x509_trust_list_remove_trust_file: X509 certificate API.
                                                             (line 8280)
* gnutls_x509_trust_list_remove_trust_mem: X509 certificate API.
                                                             (line 8302)
* gnutls_x509_trust_list_verify_crt:     Verifying X.509 certificate paths.
                                                             (line   97)
* gnutls_x509_trust_list_verify_crt <1>: X509 certificate API.
                                                             (line 8323)
* gnutls_x509_trust_list_verify_crt2:    Verifying X.509 certificate paths.
                                                             (line  127)
* gnutls_x509_trust_list_verify_crt2 <1>: X509 certificate API.
                                                             (line 8356)
* gnutls_x509_trust_list_verify_named_crt: Verifying X.509 certificate paths.
                                                             (line  188)
* gnutls_x509_trust_list_verify_named_crt <1>: X509 certificate API.
                                                             (line 8420)


File: gnutls.info,  Node: Concept Index,  Prev: Function and Data Index,  Up: Top

Concept Index
*************

 [index ]
* Menu:

* abstract types:                        Abstract key types.  (line   6)
* alert protocol:                        The TLS Alert Protocol.
                                                              (line   6)
* ALPN:                                  Application Layer Protocol Negotiation (ALPN).
                                                              (line   6)
* anonymous authentication:              Anonymous authentication.
                                                              (line   6)
* API reference:                         API reference.       (line   6)
* Application Layer Protocol Negotiation: Application Layer Protocol Negotiation (ALPN).
                                                              (line   6)
* Application-specific keys:             Application-specific keys.
                                                              (line   6)
* authentication methods:                Authentication methods.
                                                              (line   6)
* bad_record_mac:                        On Record Padding.   (line   6)
* callback functions:                    Callback functions.  (line   6)
* certificate authentication:            Certificate authentication.
                                                              (line   6)
* certificate authentication <1>:        More on certificate authentication.
                                                              (line   6)
* certificate requests:                  PKCS 10 certificate requests.
                                                              (line   6)
* certificate revocation lists:          PKIX certificate revocation lists.
                                                              (line   6)
* certificate status:                    OCSP certificate status checking.
                                                              (line   6)
* certificate status <1>:                OCSP stapling.       (line   6)
* Certificate status request:            OCSP status request. (line   6)
* Certificate verification:              Advanced certificate verification.
                                                              (line   6)
* certification:                         Certification.       (line   6)
* certtool:                              certtool Invocation. (line   6)
* certtool help:                         certtool Invocation. (line  21)
* channel bindings:                      Channel Bindings.    (line   6)
* ciphersuites:                          Supported ciphersuites.
                                                              (line   6)
* client certificate authentication:     Client Authentication.
                                                              (line   6)
* compression algorithms:                Compression algorithms and the record layer.
                                                              (line   6)
* contributing:                          Contributing.        (line   6)
* CRL:                                   PKIX certificate revocation lists.
                                                              (line   6)
* DANE:                                  Verifying a certificate using DANE.
                                                              (line   6)
* DANE <1>:                              Certificate verification.
                                                              (line   6)
* danetool:                              danetool Invocation. (line   6)
* danetool help:                         danetool Invocation. (line  15)
* deriving keys:                         Deriving keys for other applications/protocols.
                                                              (line   6)
* digital signatures:                    Digital signatures.  (line   6)
* DNSSEC:                                Verifying a certificate using DANE.
                                                              (line   6)
* DNSSEC <1>:                            Certificate verification.
                                                              (line   6)
* download:                              Downloading and installing.
                                                              (line   6)
* Encrypted keys:                        Managing encrypted keys.
                                                              (line   6)
* error codes:                           Error codes.         (line   6)
* example programs:                      GnuTLS application examples.
                                                              (line   6)
* examples:                              GnuTLS application examples.
                                                              (line   6)
* exporting keying material:             Deriving keys for other applications/protocols.
                                                              (line   6)
* False Start:                           False Start.         (line   6)
* FDL, GNU Free Documentation License:   Copying Information. (line   6)
* file signing:                          Public key algorithms.
                                                              (line  14)
* fork:                                  Sessions and fork.   (line   6)
* generating parameters:                 Parameter generation.
                                                              (line   6)
* giovec_t:                              Common types.        (line   6)
* gnutls-cli:                            gnutls-cli Invocation.
                                                              (line   6)
* gnutls-cli help:                       gnutls-cli Invocation.
                                                              (line  17)
* gnutls-cli-debug:                      gnutls-cli-debug Invocation.
                                                              (line   6)
* gnutls-cli-debug help:                 gnutls-cli-debug Invocation.
                                                              (line  21)
* gnutls-serv:                           gnutls-serv Invocation.
                                                              (line   6)
* gnutls-serv help:                      gnutls-serv Invocation.
                                                              (line  16)
* gnutls_datum_t:                        Common types.        (line   6)
* hacking:                               Contributing.        (line   6)
* handshake protocol:                    The TLS Handshake Protocol.
                                                              (line   6)
* hardware security modules:             Smart cards and HSMs.
                                                              (line   6)
* hardware tokens:                       Smart cards and HSMs.
                                                              (line   6)
* hash functions:                        Hash and MAC functions.
                                                              (line   6)
* heartbeat:                             HeartBeat.           (line   6)
* HMAC functions:                        Hash and MAC functions.
                                                              (line   6)
* installation:                          Downloading and installing.
                                                              (line   6)
* installation <1>:                      Installing for a software distribution.
                                                              (line   6)
* internal architecture:                 Internal architecture of GnuTLS.
                                                              (line   6)
* isolated mode:                         Running in a sandbox.
                                                              (line   6)
* key extraction:                        Deriving keys for other applications/protocols.
                                                              (line   6)
* Key pinning:                           Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* Key pinning <1>:                       Certificate verification.
                                                              (line   6)
* key sizes:                             Selecting cryptographic key sizes.
                                                              (line   6)
* keying material exporters:             Deriving keys for other applications/protocols.
                                                              (line   6)
* MAC functions:                         Hash and MAC functions.
                                                              (line   6)
* maximum fragment length:               Maximum fragment length negotiation.
                                                              (line   6)
* OCSP:                                  OCSP certificate status checking.
                                                              (line   6)
* OCSP Functions:                        OCSP API.            (line   6)
* OCSP stapling:                         OCSP stapling.       (line   6)
* OCSP status request:                   OCSP status request. (line   6)
* ocsptool:                              ocsptool Invocation. (line   6)
* ocsptool help:                         ocsptool Invocation. (line  22)
* Online Certificate Status Protocol:    OCSP certificate status checking.
                                                              (line   6)
* Online Certificate Status Protocol <1>: OCSP stapling.      (line   6)
* OpenPGP certificates:                  OpenPGP certificates.
                                                              (line   6)
* OpenSSL:                               Compatibility with the OpenSSL library.
                                                              (line   6)
* OpenSSL encrypted keys:                Managing encrypted keys.
                                                              (line 231)
* overriding algorithms:                 Overriding algorithms.
                                                              (line   6)
* p11tool:                               p11tool Invocation.  (line   6)
* p11tool help:                          p11tool Invocation.  (line  25)
* parameter generation:                  Parameter generation.
                                                              (line   6)
* PCT:                                   On SSL 2 and older protocols.
                                                              (line  37)
* PKCS #10:                              PKCS 10 certificate requests.
                                                              (line   6)
* PKCS #11 tokens:                       Smart cards and HSMs.
                                                              (line   6)
* PKCS #12:                              Managing encrypted keys.
                                                              (line 125)
* PKCS #7:                               Public key algorithms.
                                                              (line  14)
* PKCS #8:                               Managing encrypted keys.
                                                              (line  86)
* Priority strings:                      Priority Strings.    (line   6)
* PSK authentication:                    Authentication using PSK.
                                                              (line   6)
* psktool:                               psktool Invocation.  (line   6)
* psktool help:                          psktool Invocation.  (line  16)
* public key algorithms:                 Public key algorithms.
                                                              (line   6)
* random numbers:                        Random number generation.
                                                              (line   6)
* reauthentication:                      Re-authentication.   (line   6)
* record padding:                        On Record Padding.   (line   6)
* record protocol:                       The TLS record protocol.
                                                              (line   6)
* renegotiation:                         Safe renegotiation.  (line   6)
* renegotiation <1>:                     Re-authentication.   (line   6)
* reporting bugs:                        Bug Reports.         (line   6)
* resuming sessions:                     Resuming Sessions.   (line   6)
* resuming sessions <1>:                 Session resumption.  (line   6)
* safe renegotiation:                    Safe renegotiation.  (line   6)
* seccomp:                               Running in a sandbox.
                                                              (line   6)
* Secure RTP:                            SRTP.                (line   6)
* server name indication:                Server name indication.
                                                              (line   6)
* session resumption:                    Resuming Sessions.   (line   6)
* session resumption <1>:                Session resumption.  (line   6)
* session tickets:                       Session tickets.     (line   6)
* Smart card example:                    Client using a smart card with TLS.
                                                              (line   6)
* smart cards:                           Smart cards and HSMs.
                                                              (line   6)
* SRP authentication:                    Authentication using SRP.
                                                              (line   6)
* srptool:                               srptool Invocation.  (line   6)
* srptool help:                          srptool Invocation.  (line  23)
* SRTP:                                  SRTP.                (line   6)
* SSH-style authentication:              Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* SSH-style authentication <1>:          Certificate verification.
                                                              (line   6)
* SSL 2:                                 On SSL 2 and older protocols.
                                                              (line   6)
* Supplemental data:                     Extensions and Supplemental Data.
                                                              (line   6)
* symmetric algorithms:                  Symmetric algorithms.
                                                              (line   6)
* symmetric cryptography:                Symmetric algorithms.
                                                              (line   6)
* symmetric encryption algorithms:       Encryption algorithms used in the record layer.
                                                              (line   6)
* System-specific keys:                  Application-specific keys.
                                                              (line   5)
* thread safety:                         Thread safety.       (line   6)
* tickets:                               Session tickets.     (line   6)
* TLS extensions:                        TLS Extensions.      (line   6)
* TLS extensions <1>:                    Maximum fragment length negotiation.
                                                              (line   6)
* TLS extensions <2>:                    Server name indication.
                                                              (line   6)
* TLS extensions <3>:                    Session tickets.     (line   6)
* TLS extensions <4>:                    HeartBeat.           (line   6)
* TLS False Start:                       False Start.         (line   6)
* TLS layers:                            TLS layers.          (line   6)
* TPM:                                   Trusted Platform Module.
                                                              (line   6)
* tpmtool:                               tpmtool Invocation.  (line   6)
* tpmtool help:                          tpmtool Invocation.  (line  15)
* transport layer:                       The transport layer. (line   6)
* transport protocol:                    The transport layer. (line   6)
* Trust on first use:                    Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* Trust on first use <1>:                Certificate verification.
                                                              (line   6)
* trusted platform module:               Trusted Platform Module.
                                                              (line   6)
* upgrading:                             Upgrading from previous versions.
                                                              (line   6)
* verifying certificate paths:           Verifying X.509 certificate paths.
                                                              (line   6)
* verifying certificate paths <1>:       Verifying a certificate in the context of TLS session.
                                                              (line   6)
* verifying certificate paths <2>:       Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* verifying certificate paths <3>:       Verifying a certificate using DANE.
                                                              (line   6)
* verifying certificate with pkcs11:     Verification using PKCS11.
                                                              (line   6)
* X.509 certificate name:                X.509 certificate names.
                                                              (line   6)
* X.509 certificates:                    X.509 certificates.  (line   6)
* X.509 distinguished name:              X.509 distinguished names.
                                                              (line   6)
* X.509 extensions:                      X.509 extensions.    (line   6)
* X.509 Functions:                       X509 certificate API.
                                                              (line   6)

